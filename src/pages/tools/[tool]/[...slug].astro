---
// ========== IMPORTS ==========
import { getCollection, type CollectionEntry } from 'astro:content';
import PostLayout from '../../../layouts/PostLayout.astro';
import Breadcrumb from '../../../components/common/Breadcrumb.astro';
import { getVisibleToolArticles } from '../../../utils/content/PostStatus-Filter';
import { resolvePath, getCollectionInfo } from '../../../utils/collections';
import { logger } from '../../../utils/logging/console-logger';
import { generateBreadcrumbSchema } from '../../../utils/breadcrumb-schema';
import toolArticleTemplate from '../../../data/seo/pages/tool-article-template.json';
import { CldImage } from 'astro-cloudinary';
import { buildCloudinaryUrl } from '../../../utils/cloudinary';

// ========== UTILITY FUNCTIONS ==========
export async function getVisibleToolArticlesData() {
  const allPosts = await getCollection('tool-articles');
  return getVisibleToolArticles(allPosts);
}

export function extractToolNameFromSlug(slug: string): string {
  return slug.split('/')[0];
}

async function getValidTools(): Promise<string[]> {
  const posts = await getVisibleToolArticlesData();
  const toolNames = new Set<string>();
  posts.forEach((post: CollectionEntry<'tool-articles'>) => {
    const toolName = extractToolNameFromSlug(post.slug);
    if (toolName) toolNames.add(toolName);
  });
  return Array.from(toolNames).sort();
}

// ========== STATIC PATH GENERATION ==========
export async function getStaticPaths() {
  const posts = await getVisibleToolArticlesData();
  return posts.map((post: CollectionEntry<'tool-articles'>) => {
    const toolName = extractToolNameFromSlug(post.slug);
    const articleSlug = post.slug.split('/').slice(1).join('/');
    return { params: { tool: toolName, slug: articleSlug }, props: { post } };
  });
}

// ========== COMPONENT LOGIC ==========
const { post } = Astro.props as { post: CollectionEntry<'tool-articles'> };
const params = Astro.params as { tool: string; slug: string };
const toolName = params.tool;
const articleSlug = params.slug;

// ========== SECURITY VALIDATION ==========
if (
  toolName?.includes('..') ||
  toolName?.includes('/') ||
  articleSlug?.includes('..') ||
  articleSlug?.includes('//')
) {
  logger.log(
    `Security: Path traversal attempt detected: ${toolName}, ${articleSlug}`,
    'warning'
  );
  return Astro.redirect('/404', 301);
}

const validTools = await getValidTools();
if (!validTools.includes(toolName)) {
  logger.log(`Security: Invalid tool name requested: ${toolName}`, 'warning');
  return Astro.redirect('/tools', 301);
}

const sanitizedSlug = articleSlug?.replace(/[<>\"'&]/g, '');
if (sanitizedSlug !== articleSlug) {
  logger.log(
    `Security: XSS attempt detected in slug: ${articleSlug}`,
    'warning'
  );
  return Astro.redirect('/404', 301);
}

if (!post) {
  logger.log(`Tool article not found: ${toolName}, ${articleSlug}`, 'warning');
  return Astro.redirect('/404', 301);
}

// ========== CONTENT PROCESSING ==========
const { Content, headings } = await post.render();
const tocHeadings = headings.filter(
  (heading: { depth: number }) => heading.depth >= 2 && heading.depth <= 3
);
const resolvedPath = { path: resolvePath('tool-articles', post.slug) };
const collectionMetadata = getCollectionInfo('tool-articles');

// ========== SEO DATA OPTIMIZATION ==========
// Phase 1: 構造化データの強化 - FAQPage, HowTo, SoftwareApplication Schema

// テンプレート変数置換関数
const replaceTemplateVariables = (template, variables) => {
  if (typeof template === 'string') {
    return template.replace(
      /\{\{(\w+)\}\}/g,
      (match, key) => variables[key] || match
    );
  } else if (Array.isArray(template)) {
    return template.map(item => replaceTemplateVariables(item, variables));
  } else if (template && typeof template === 'object') {
    const result = {};
    for (const [key, value] of Object.entries(template)) {
      result[key] = replaceTemplateVariables(value, variables);
    }
    return result;
  }
  return template;
};

// 記事の種類を判定
const getArticleType = (tags, categories) => {
  if (
    tags.some(tag => ['tutorial', 'setup', 'guide'].includes(tag.toLowerCase()))
  ) {
    return 'tutorial';
  }
  if (categories.some(cat => cat.toLowerCase().includes('tutorial'))) {
    return 'tutorial';
  }
  if (tags.some(tag => ['guide', 'howto'].includes(tag.toLowerCase()))) {
    return 'guide';
  }
  if (tags.some(tag => ['setup', 'install'].includes(tag.toLowerCase()))) {
    return 'setup';
  }
  return 'general';
};

// 記事タイプを取得
const articleType = getArticleType(
  post.data.tags || [],
  post.data.categories || []
);

// ツール情報を取得（テンプレートベース・ミニマリスト原則：3行以内）
const toolInfo = toolArticleTemplate.toolData[toolName.toLowerCase()] || {
  description: `Tools ${toolName}`,
  operatingSystem: 'Windows, macOS, Linux',
  author: 'GoRakuDo Team',
};

// テンプレート変数の準備（ミニマリスト原則：使用中の変数のみ）
const templateVariables = {
  toolName: toolName.charAt(0).toUpperCase() + toolName.slice(1),
  toolSlug: toolName,
  articleTitle: post.data.title || '',
  articleDescription: post.data.description || '',
  articleUrl: resolvedPath.path, // 相対パス（breadcrumb用）
  toolImage: post.data.featuredImage
    ? buildCloudinaryUrl(post.data.featuredImage)
    : `https://gorakudo.org/icon/${toolName}-icon-240.webp`,
  toolDescription: toolInfo.description,
  operatingSystem: toolInfo.operatingSystem,
  toolAuthor: toolInfo.author,
  toolUrl: `https://gorakudo.org/tools/${toolName}`,
};

// テンプレートベースのSoftwareApplication生成
const generateSoftwareApplicationSchema = () => {
  // フォールバック用のSoftwareApplication生成
  if (!toolArticleTemplate || !toolArticleTemplate.structuredData) {
    return {
      '@context': 'https://schema.org',
      '@type': 'SoftwareApplication',
      name: templateVariables.toolName,
      description: templateVariables.toolDescription,
      url: `https://gorakudo.org/tools/${templateVariables.toolSlug}`,
      applicationCategory: 'EducationalApplication',
      operatingSystem: templateVariables.operatingSystem,
      author: {
        '@type': 'Organization',
        name: templateVariables.toolAuthor,
      },
      publisher: {
        '@type': 'Organization',
        name: 'GoRakuDo',
      },
    };
  }

  return replaceTemplateVariables(
    toolArticleTemplate.structuredData.softwareApplication,
    templateVariables
  );
};

// 構造化データの生成 - FAQ Schema is now handled by UnifiedSEO

const softwareApplicationSchema = generateSoftwareApplicationSchema();

// テンプレートベースのBreadcrumb Schema生成
const breadcrumbData = replaceTemplateVariables(
  toolArticleTemplate.breadcrumbData,
  templateVariables
);

const breadcrumbSchema = generateBreadcrumbSchema({
  items: breadcrumbData.items.map((item: any, index: number) => ({
    title: item.name,
    url: item.url,
    isActive: index === breadcrumbData.items.length - 1,
  })),
  siteUrl: String(Astro.site || 'https://gorakudo.org'),
});

// Phase 2: メタタグの最適化 - 検索意図に合わせたタイトル・説明文・キーワード

// シンプルなタイトル生成: MDXフロントマターのまま
const generateTemplateBasedTitle = post => {
  const articleTitle = post.data.title || post.slug;
  return `${articleTitle} | GoRakuDo`;
};

// シンプルな説明文生成: MDXフロントマターのまま
const generateTemplateBasedDescription = post => post.data.description || '';

// シンプルなキーワード生成: baseKeywords + mdxKeywords + baseTags
const generateTemplateBasedKeywords = post => {
  const mdxKeywords = post.data.keywords || [];
  const baseTags = post.data.tags || [];
  const baseKeywords = toolArticleTemplate?.seoOptimization?.baseKeywords || [];
  return [...baseKeywords, ...mdxKeywords, ...baseTags]
    .filter((kw, i, arr) => arr.indexOf(kw) === i)
    .slice(0, 15);
};

// 最適化されたSEOデータ
const seoData = {
  title: generateTemplateBasedTitle(post),
  description: generateTemplateBasedDescription(post),
  keywords: generateTemplateBasedKeywords(post),
  articleType: 'tool-guide',
  searchIntent: 'informational',
  publishedDate: post.data.publishedDate,
  modifiedDate: post.data.publishedDate,
  isDraft: post.data.status !== 'published',
};

// ========== CLIENT DATA ==========
const postData = {
  title: post.data.title,
  description: post.data.description,
  resolvedPath: resolvedPath.path,
  toolName,
};

// ========== BREADCRUMB CONFIGURATION ==========
const breadcrumbConfig = {
  currentPath: resolvedPath.path,
  showHome: true,
  showIcons: true,
  ariaLabel: `Tool article navigation breadcrumb for ${toolName}`,
};
---

<PostLayout
  title={seoData.title}
  description={seoData.description}
  publishedDate={seoData.publishedDate}
  lang='id'
  author={post.data.author || 'GoRakuDo Team'}
  tags={seoData.keywords}
  post={post}
  collectionMetadata={collectionMetadata}
  headings={tocHeadings}
  postActions={true}
  contentConfig={{
    id: 'main-content',
    ariaLabel: 'Tool article content',
  }}
  breadcrumbConfig={breadcrumbConfig}
  breadcrumbSchema={breadcrumbSchema as any}
  softwareApplicationSchema={softwareApplicationSchema}
  featuredImage={post.data.featuredImage}
>
  <!-- Breadcrumb Slot -->
  <Breadcrumb
    slot='breadcrumb'
    {post}
    currentPath={breadcrumbConfig.currentPath}
    showHome={breadcrumbConfig.showHome}
    showIcons={breadcrumbConfig.showIcons}
    ariaLabel={breadcrumbConfig.ariaLabel}
  />

  <!-- Header Slot -->
  <header slot='header' class='content-header mt-8'>
    <h1>{post.data.title}</h1>

    <div class='content-meta' aria-label='Tool article metadata'>
      <time class='content-date' datetime={seoData.publishedDate}>
        {
          new Date(seoData.publishedDate).toLocaleDateString('id-ID', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
          })
        }
      </time>
      <span class='content-author'
        >by {post.data.author || 'GoRakuDo Team'}</span
      >
      <span class='tool-indicator'>Tool: {toolName}</span>
    </div>

    {
      post.data.tags && post.data.tags.length > 0 ? (
        <nav
          class='flex gap-2 flex-wrap mt-4 justify-center sm:justify-start'
          aria-label='Article tags'
        >
          {post.data.tags.map((tag: string) => (
            <span class='bg-primary/20 text-primary px-2 py-1 rounded text-xs border border-primary/30'>
              {tag}
            </span>
          ))}
        </nav>
      ) : (
        <div class='tag-warning mt-4' role='alert'>
          <span class='text-warning text-sm'>
            Belum ada tag yang ditetapkan
          </span>
        </div>
      )
    }
  </header>

  <!-- Featured Image Slot -->
  {
    post.data.featuredImage && (
      <div slot='featured-image' class='featured-image-container mt-6'>
        <CldImage
          src={post.data.featuredImage}
          alt={post.data.title}
          class='featured-image-thumbnail'
          loading='eager'
          width={800}
          quality='auto'
          format='auto'
        />
      </div>
    )
  }

  <!-- Content Slot -->
  <div slot='content'>
    {
      post.data.tags && post.data.tags.length > 0 ? (
        <Content />
      ) : (
        <div class='fallback-content' role='alert'>
          <p class='text-warning mb-4'>
            This article is missing proper tag categorization. Content may not
            appear in tool indexes.
          </p>
          <Content />
        </div>
      )
    }
  </div>

  <!-- Actions Slot -->
  <footer slot='actions' class='content-actions'>
    <div class='action-buttons'>
      <a
        href={`/tools/${toolName}`}
        class='back-to-tools'
        aria-label={`Back to ${toolName} tools`}
      >
        <svg
          width='16'
          height='16'
          viewBox='0 0 24 24'
          fill='none'
          stroke='currentColor'
          stroke-width='2'
          stroke-linecap='round'
          stroke-linejoin='round'
          aria-hidden='true'
        >
          <path d='M19 12H5M12 19l-7-7 7-7'></path>
        </svg>
        Back to {toolName} tools
      </a>

      <a href='/tools' class='back-to-content' aria-label='Back to all tools'>
        <svg
          width='16'
          height='16'
          viewBox='0 0 24 24'
          fill='none'
          stroke='currentColor'
          stroke-width='2'
          stroke-linecap='round'
          stroke-linejoin='round'
          aria-hidden='true'
        >
          <path d='M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z'></path>
        </svg>
        All Tools
      </a>

      <div class='share-buttons'>
        <button
          class='share-btn'
          onclick='sharePost()'
          aria-label='Share this tool article'
        >
          <svg
            width='16'
            height='16'
            viewBox='0 0 24 24'
            fill='none'
            stroke='currentColor'
            stroke-width='2'
            stroke-linecap='round'
            stroke-linejoin='round'
            aria-hidden='true'
          >
            <path d='M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8'></path>
            <polyline points='16,6 12,2 8,6'></polyline>
            <line x1='12' y1='2' x2='12' y2='15'></line>
          </svg>
          Share
        </button>
      </div>
    </div>
  </footer>
</PostLayout>

<!-- Related Tools Section -->
{
  post.data.relatedTools && post.data.relatedTools.length > 0 && (
    <section
      class='related-tools-section mt-12 p-6 bg-surface border border-border rounded-lg'
      role='complementary'
      aria-labelledby='related-tools-title'
    >
      <h2
        id='related-tools-title'
        class='text-xl font-semibold text-foreground mb-4'
      >
        Tools Terkait
      </h2>
      <p class='text-muted-foreground text-sm mb-4'>
        Tools lain yang memiliki keterkaitan dengan tool yang dibahas dalam
        artikel ini.
      </p>
      <div class='related-tools-grid grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4'>
        {post.data.relatedTools.map((relatedTool: string) => (
          <a
            href={`/tools/${relatedTool.toLowerCase()}`}
            class='related-tool-card group flex items-center gap-3 p-4 bg-primary/5 hover:bg-primary/10 border border-primary/20 hover:border-primary/30 rounded-lg transition-all duration-200 hover:scale-105'
            aria-label={`Buka halaman detail ${relatedTool}`}
          >
            <div class='tool-icon-container flex-shrink-0'>
              <img
                src={`/icon/${relatedTool.toLowerCase()}-icon-240.webp`}
                alt={`Ikon ${relatedTool}`}
                class='w-8 h-8 object-contain'
                loading='lazy'
                decoding='async'
              />
            </div>
            <div class='tool-info flex-1 min-w-0'>
              <h3 class='font-medium text-foreground group-hover:text-primary transition-colors'>
                {relatedTool}
              </h3>
              <p class='text-sm text-muted-foreground'>Tool Terkait</p>
            </div>
            <div class='arrow-icon flex-shrink-0 text-muted-foreground group-hover:text-primary transition-colors'>
              <svg
                class='w-4 h-4'
                fill='none'
                stroke='currentColor'
                viewBox='0 0 24 24'
              >
                <path
                  stroke-linecap='round'
                  stroke-linejoin='round'
                  stroke-width='2'
                  d='M9 5l7 7-7 7'
                />
              </svg>
            </div>
          </a>
        ))}
      </div>
    </section>
  )
}

<!-- ========== SCRIPTS ========== -->
<script is:inline define:vars={{ postData, toolName, articleSlug }}>
  // Share functionality
  const sharePost = () => {
    const shareUrl = postData?.resolvedPath
      ? `${window.location.origin}${postData.resolvedPath}`
      : window.location.href;

    if (navigator.share) {
      navigator.share({
        title: postData?.title || `${toolName} Tool Guide`,
        text:
          postData?.description ||
          `Check out this ${toolName} guide from GoRakuDo`,
        url: shareUrl,
      });
    } else {
      navigator.clipboard.writeText(shareUrl).then(() => {
        alert('Link berhasil disalin ke clipboard!');
      });
    }
  };

  window.sharePost = sharePost;

  // Accessibility enhancements
  const initAccessibility = () => {
    const articleContent = document.querySelector('.content-main');
    if (!articleContent) return;

    // Add skip link
    const skipLink = document.createElement('a');
    skipLink.href = '#main-content';
    skipLink.className =
      'sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-primary text-primary-foreground px-4 py-2 rounded z-50';
    skipLink.textContent = 'Skip to main content';
    document.body.insertBefore(skipLink, document.body.firstChild);

    // Add alt text to images
    const images = articleContent.querySelectorAll('img:not([alt])');
    images.forEach(img => {
      img.alt = `${toolName} tool illustration`;
    });

    // Validate heading hierarchy
    const headings = articleContent.querySelectorAll('h1, h2, h3, h4, h5, h6');
    let lastLevel = 0;
    headings.forEach(heading => {
      const level = parseInt(heading.tagName.charAt(1));
      if (level - lastLevel > 1) {
        console.warn(
          `⚠️ Accessibility: Heading level skipped from h${lastLevel} to h${level}`
        );
      }
      lastLevel = level;
    });
  };

  // Initialize
  document.addEventListener('DOMContentLoaded', () => {
    console.log('✅ Tool article accessed:', {
      tool: toolName,
      slug: articleSlug,
      title: postData?.title,
      timestamp: new Date().toISOString(),
    });
    initAccessibility();
  });
</script>
