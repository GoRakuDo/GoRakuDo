---
// SEO data - Astro„Éç„Ç§„ÉÜ„Ç£„Éñ„Ç¢„Éó„É≠„Éº„ÉÅÔºàË®≠ÂÆö„Éï„Ç°„Ç§„É´‰∏çË¶ÅÔºâ
import UnifiedSEO from "../components/UnifiedSEO.astro"

const seoData = {
  title: "404 Error - Halaman Tidak Ditemukan | GoRakuDo",
  description: "Maaf, halaman yang Anda cari tidak ditemukan. Kembali ke GoRakuDo untuk sumber daya pembelajaran bahasa Jepang efektif dan dukungan komunitas",
  keywords: ["404", "error", "halaman", "tidak", "ditemukan", "bahasa", "jepang", "belajar", "pembelajaran", "learning"],
  pageType: "website" as const
}

// Redirect mapping for old URLs with dynamic path support
import { getCollectionInfo } from "../utils/collections"

const collectionMetadata = getCollectionInfo("docs")
const defaultPath = collectionMetadata.basePath

const redirectMap = {
  "/docs/posts": defaultPath,
  "/docs/post": defaultPath,
  "/posts": defaultPath,
  "/post": defaultPath,
  "/blog": defaultPath,
  "/articles": defaultPath,
  "/guide": defaultPath,
  "/guides": defaultPath,
  "/tutorial": defaultPath,
  "/tutorials": defaultPath,
}

// Get current path for potential redirect
const currentPath = Astro.url.pathname
const redirectTarget = redirectMap[currentPath]

// If we have a redirect target, perform the redirect
if (redirectTarget) {
  return Astro.redirect(redirectTarget, 301) // Permanent redirect
}
---

<html lang="ja">
  <head>
    <!-- UnifiedSEO - Astro„Éç„Ç§„ÉÜ„Ç£„Éñ„Ç¢„Éó„É≠„Éº„ÉÅÔºàË®≠ÂÆö„Éï„Ç°„Ç§„É´‰∏çË¶ÅÔºâ -->
    <UnifiedSEO
      title={seoData.title}
      description={seoData.description}
      keywords={seoData.keywords}
      pageType={seoData.pageType}
      lang="id"
      gtag={import.meta.env.PUBLIC_GA_ID}
      noindex={true}
    />
    <link rel="stylesheet" href="/css/post-styles.css" />
    <style>
      /* 404 Page Specific Styles */
      .error-container {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        padding: 20px;
        overflow: hidden;
        background: linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 100%);
      }

      .error-background {
        position: absolute;
        inset: 0;
        z-index: 1;
        background:
          radial-gradient(circle at 20% 80%, rgb(139 93 255 / 10%) 0%, transparent 50%),
          radial-gradient(circle at 80% 20%, rgb(228 180 59 / 10%) 0%, transparent 50%),
          radial-gradient(circle at 40% 40%, rgb(139 93 255 / 5%) 0%, transparent 50%);
      }

      .error-content {
        position: relative;
        z-index: 2;
        max-width: 600px;
        padding: 60px 40px;
        text-align: center;
        background: rgb(255 255 255 / 3%);
        border: 1px solid rgb(139 93 255 / 10%);
        border-radius: 20px;
        backdrop-filter: blur(10px);
      }

      .error-icon {
        margin-bottom: 30px;
        font-size: 120px;
        animation: float 3s ease-in-out infinite;
      }

      .error-title {
        margin-bottom: 20px;
        font-size: 48px;
        font-weight: 700;
        color: var(--color-text-primary);
        background: linear-gradient(135deg, #8b5dff 0%, #e4b43b 100%);
        background-clip: text;
        -webkit-text-fill-color: transparent;
      }

      .error-subtitle {
        margin-bottom: 30px;
        font-size: 20px;
        line-height: 1.6;
        color: var(--color-text-secondary);
      }

      .error-description {
        margin-bottom: 40px;
        font-size: 16px;
        line-height: 1.6;
        color: var(--color-text-muted);
      }

      .error-actions {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
        margin-bottom: 40px;
      }

      .error-btn {
        display: inline-flex;
        gap: 10px;
        align-items: center;
        padding: 15px 30px;
        font-size: 16px;
        font-weight: 600;
        text-decoration: none;
        cursor: pointer;
        border: none;
        border-radius: 12px;
        transition: all 0.3s ease;
      }

      .error-btn.primary {
        color: white;
        background: linear-gradient(135deg, #8b5dff 0%, #7b4def 100%);
      }

      .error-btn.primary:hover {
        box-shadow: 0 8px 25px rgb(139 93 255 / 30%);
        transform: translateY(-2px);
      }

      .error-btn.secondary {
        color: var(--color-text-primary);
        background: rgb(139 93 255 / 10%);
        border: 1px solid rgb(139 93 255 / 20%);
      }

      .error-btn.secondary:hover {
        background: rgb(139 93 255 / 20%);
        border-color: var(--color-accent-purple);
      }

      .error-suggestions {
        padding: 30px;
        margin-top: 40px;
        background: rgb(139 93 255 / 5%);
        border: 1px solid rgb(139 93 255 / 10%);
        border-radius: 12px;
      }

      .suggestions-title {
        margin-bottom: 20px;
        font-size: 18px;
        font-weight: 600;
        color: var(--color-text-primary);
      }

      .suggestions-list {
        padding: 0;
        margin: 0;
        list-style: none;
      }

      .suggestions-list li {
        margin-bottom: 10px;
        color: var(--color-text-secondary);
      }

      .suggestions-list li::before {
        margin-right: 10px;
        content: "üîç ";
      }

      .error-path {
        padding: 10px 15px;
        margin: 20px 0;
        font-family: monospace;
        font-size: 14px;
        color: var(--color-text-secondary);
        word-break: break-all;
        background: rgb(139 93 255 / 10%);
        border: 1px solid rgb(139 93 255 / 20%);
        border-radius: 8px;
      }

      @keyframes float {
        0%,
        100% {
          transform: translateY(0);
        }

        50% {
          transform: translateY(-10px);
        }
      }

      /* Responsive Design */
      @media (width <= 768px) {
        .error-content {
          padding: 40px 20px;
        }

        .error-title {
          font-size: 36px;
        }

        .error-subtitle {
          font-size: 18px;
        }

        .error-actions {
          flex-direction: column;
          align-items: center;
        }

        .error-btn {
          justify-content: center;
          width: 100%;
          max-width: 300px;
        }
      }
    </style>
  </head>
  <body>
    <div class="error-container">
      <div class="error-background"></div>
      <div class="error-content">
        <div class="error-icon">üöÄ</div>
        <h1 class="error-title">404</h1>
        <h2 class="error-subtitle">Halaman Tidak Ditemukan</h2>
        <p class="error-description">
          Maaf, halaman yang Anda cari tidak ditemukan. Mungkin halaman tersebut telah
          dipindahkan atau dihapus.
        </p>

        <div class="error-path">
          Path yang diminta: <strong>{currentPath}</strong>
        </div>

        <div class="error-actions">
          <a href="/" class="error-btn primary"> üè† Kembali ke Beranda </a>
          <a href="/docs" class="error-btn secondary"> üìö Lihat Dokumentasi </a>
          <button onclick="goBack()" class="error-btn secondary"> ‚¨ÖÔ∏è Kembali </button>
        </div>

        <div class="error-suggestions">
          <h3 class="suggestions-title">üí° Saran Pencarian</h3>
          <ul class="suggestions-list">
            <li>Periksa URL yang Anda ketik</li>
            <li>Gunakan fitur pencarian di halaman dokumentasi</li>
            <li>Kunjungi halaman beranda untuk navigasi</li>
            <li>Hubungi tim kami jika masalah berlanjut</li>
          </ul>
        </div>
      </div>
    </div>

    <script>
      // Navigation functions
      function goHome() {
        window.location.href = "/"
      }

      function goToDocs() {
        window.location.href = "/docs"
      }

      function goBack() {
        if (window.history.length > 1) {
          window.history.back()
        } else {
          window.location.href = "/"
        }
      }

      // Auto-redirect for common old URLs (client-side fallback)
      const currentPath = window.location.pathname
      const redirectMap = {
        "/docs/posts": "/docs",
        "/docs/post": "/docs",
        "/posts": "/docs",
        "/post": "/docs",
        "/blog": "/docs",
        "/articles": "/docs",
        "/guide": "/docs",
        "/guides": "/docs",
        "/tutorial": "/docs",
        "/tutorials": "/docs",
      }

      if (redirectMap[currentPath]) {
        console.log(`üîÑ Redirecting ${currentPath} to ${redirectMap[currentPath]}`)
        window.location.href = redirectMap[currentPath]
      }

      // Add some interactive elements
      document.addEventListener("DOMContentLoaded", function () {
        // Add click handlers for buttons
        const primaryBtn = document.querySelector(".error-btn.primary")
        const secondaryBtns = document.querySelectorAll(".error-btn.secondary")

        if (primaryBtn) {
          primaryBtn.addEventListener("click", goHome)
        }

        secondaryBtns.forEach((btn) => {
          const btnText = btn.textContent || ""
          if (btnText.includes("Dokumentasi")) {
            btn.addEventListener("click", goToDocs)
          } else if (btnText.includes("Kembali")) {
            btn.addEventListener("click", goBack)
          }
        })

        // Add some subtle animations
        const errorIcon = document.querySelector(".error-icon")
        if (errorIcon) {
          errorIcon.addEventListener("mouseenter", function () {
            this.style.transform = "scale(1.1) rotate(5deg)"
          })

          errorIcon.addEventListener("mouseleave", function () {
            this.style.transform = "scale(1) rotate(0deg)"
          })
        }
      })
    </script>
  </body>
</html>
