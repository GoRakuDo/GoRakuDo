---
// tagCategories-cards.astro - Reusable component for displaying content cards
// Supports different content types with AI-ready features and mind map integration

import { resolvePath, getCollectionInfo } from '../../utils/collections';

export interface Props {
  title: string;
  description: string;
  slug: string;
  publishedDate: string;
  author: string;
  category: string;
  tags: string[];
}

const { title, description, slug, publishedDate, author, category, tags } =
  Astro.props;

// Dynamic content path resolution
const resolvedPath = { path: resolvePath('docs', slug) };
const collectionMetadata = getCollectionInfo('docs');

// Format date
const formattedDate = new Date(publishedDate).toLocaleDateString('id-ID', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});
---

<article
  class='content-card group relative overflow-hidden rounded-xl border border-gray-200 bg-white shadow-sm transition-all duration-300 hover:shadow-lg dark:border-gray-700 dark:bg-gray-800'
>
  <!-- Card Header -->
  <div class='p-6'>
    <!-- Title -->
    <h3
      class='mb-2 text-xl font-semibold text-gray-900 transition-colors group-hover:text-purple-600 dark:text-white dark:group-hover:text-purple-400'
    >
      <a href={resolvedPath.path} class='block'>
        {title}
      </a>
    </h3>

    <!-- Description -->
    <p class='mb-4 text-sm text-gray-600 dark:text-gray-300'>
      {description}
    </p>

    <!-- Meta Information -->
    <div class='mb-4 space-y-2'>
      <!-- Author and Date -->
      <div
        class='flex items-center gap-4 text-xs text-gray-500 dark:text-gray-400'
      >
        <span class='flex items-center gap-1'>
          <svg class='h-3 w-3' fill='currentColor' viewBox='0 0 20 20'>
            <path
              fill-rule='evenodd'
              d='M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z'
              clip-rule='evenodd'></path>
          </svg>
          {author}
        </span>
        <span class='flex items-center gap-1'>
          <svg class='h-3 w-3' fill='currentColor' viewBox='0 0 20 20'>
            <path
              fill-rule='evenodd'
              d='M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z'
              clip-rule='evenodd'></path>
          </svg>
          {formattedDate}
        </span>
      </div>
    </div>

    <!-- Tags -->
    {
      tags.length > 0 && (
        <div class='mb-4 flex flex-wrap gap-1'>
          {tags.slice(0, 3).map(tag => (
            <span class='rounded-full bg-gray-100 px-2 py-1 text-xs text-gray-600 dark:bg-gray-700 dark:text-gray-300'>
              #{tag}
            </span>
          ))}
          {tags.length > 3 && (
            <span class='rounded-full bg-gray-100 px-2 py-1 text-xs text-gray-600 dark:bg-gray-700 dark:text-gray-300'>
              +{tags.length - 3} more
            </span>
          )}
        </div>
      )
    }

    <!-- Read More Button -->
    <div class='flex items-center justify-between'>
      <a
        href={resolvedPath.path}
        class='inline-flex items-center gap-2 rounded-lg bg-purple-600 px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800'
      >
        Read More
        <svg
          class='h-4 w-4'
          fill='none'
          stroke='currentColor'
          viewBox='0 0 24 24'
        >
          <path
            stroke-linecap='round'
            stroke-linejoin='round'
            stroke-width='2'
            d='M9 5l7 7-7 7'></path>
        </svg>
      </a>

      <!-- Category -->
      <span class='text-xs text-gray-500 dark:text-gray-400'>
        {category}
      </span>
    </div>
  </div>
</article>

<style is:global>
  .content-card {
    transition: all 0.3s ease;
  }

  .content-card:hover {
    transform: translateY(-2px);
  }

  /* Dark mode adjustments */
  @media (prefers-color-scheme: dark) {
    .content-card {
      background: oklch(20% 0.01 270deg / 0.8);
      border-color: oklch(35% 0.01 270deg / 0.5);
    }
  }
</style>
