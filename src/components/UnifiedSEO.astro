---
/**
 * UnifiedSEO.astro - AstroネイティブSEOコンポーネント
 * 
 * 設計原則:
 * - KISS: シンプルで理解しやすい実装
 * - Astro Native: Astroの標準パターンに従う
 * - Performance First: 高速な静的生成を重視
 * - Zero Config: デフォルト設定で動作
 */

// シンプルなProps定義（型ファイル不要）
export interface Props {
  title?: string;
  description?: string;
  keywords?: string[];
  canonical?: string;
  lang?: string;
  pageType?: 'website' | 'article';
  image?: string;
  author?: string;
  publishedDate?: string;
  modifiedDate?: string;
  noindex?: boolean;
  gtag?: string;
}

const {
  title = 'GoRakuDo',
  description = '日本語学習プラットフォーム',
  keywords = [],
  canonical, // 手動指定があれば使用、なければ自動生成
  lang = 'id',
  pageType = 'website',
  image = '/img/FullDC Logo.webp', // デフォルト画像を320x320のFullDC Logoに更新
  author,
  publishedDate,
  modifiedDate,
  noindex = false,
  gtag
} = Astro.props;

// URL正規化関数（ダブルパスを防ぐ）
const normalizeUrl = (baseUrl: string, path: string): string => {
  // ベースURLの末尾スラッシュを削除
  const cleanBase = baseUrl.replace(/\/+$/, '');
  // パスの先頭スラッシュを確保
  const cleanPath = path.startsWith('/') ? path : '/' + path;
  // 結合してダブルスラッシュを正規化
  return `${cleanBase}${cleanPath}`.replace(/([^:]\/)\/+/g, '$1');
};

// Astroネイティブでcanonical URLを自動生成
// GitHub Pages対応: site設定 + 現在のパス（二重スラッシュを防ぐ）
const autoCanonical = canonical || normalizeUrl(String(Astro.site || 'https://gorakudo.org'), Astro.url.pathname || '/');

// GitHub Pages SEO最適化: トレイリングスラッシュの統一
const normalizedCanonical = autoCanonical.endsWith('/') && autoCanonical !== `${Astro.site}/` 
  ? autoCanonical.slice(0, -1) 
  : autoCanonical;

// 画像パスを完全なURLに変換（OG画像は完全なURLである必要がある）
// ダブルパスを防ぐため、正規化関数を使用
const fullImageUrl = image.startsWith('http') 
  ? image 
  : normalizeUrl(String(Astro.site || 'https://gorakudo.org'), image || '/img/FullDC Logo.webp');

// デフォルト設定（Astroネイティブ）
const defaultConfig = {
  siteName: 'GoRakuDo',
  locale: lang === 'id' ? 'id_ID' : 'ja_JP', // 言語に応じてlocaleを動的に設定
  twitterCard: 'summary_large_image',
  favicon: '/favicon.svg'
};

// シンプルなJSON-LD生成
const jsonLD = {
  '@context': 'https://schema.org',
  '@type': pageType === 'article' ? 'Article' : 'WebSite',
  name: title,
  description,
  url: normalizedCanonical, // GitHub Pages最適化されたcanonical URLを使用
  inLanguage: lang, // 言語情報を追加
  ...(pageType === 'article' && {
    datePublished: publishedDate,
    dateModified: modifiedDate || publishedDate,
    author: author ? { '@type': 'Person', name: author } : undefined,
    publisher: {
      '@type': 'Organization',
      name: defaultConfig.siteName,
      logo: { '@type': 'ImageObject', url: '/images/logo.png' }
    },
    image: fullImageUrl,
    keywords: keywords.join(', ')
  })
};
---

<!-- SEO Meta Tags - Astroネイティブ実装 -->
<!-- 基本メタタグ -->
<title>{title}</title>
<meta name="description" content={description} />
{keywords.length > 0 && <meta name="keywords" content={keywords.join(', ')} />}
{author && <meta name="author" content={author} />}

<!-- ロボット設定 -->
<meta name="robots" content={noindex ? 'noindex, nofollow' : 'index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1'} />

<!-- Open Graph -->
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:type" content={pageType} />
<meta property="og:url" content={normalizedCanonical} />
<meta property="og:image" content={fullImageUrl} />
<meta property="og:image:width" content="320" />
<meta property="og:image:height" content="320" />
<meta property="og:image:type" content="image/webp" />
<meta property="og:image:alt" content={title} />
<meta property="og:site_name" content={defaultConfig.siteName} />
<meta property="og:locale" content={defaultConfig.locale} />

<!-- Twitter Cards -->
<meta name="twitter:card" content={defaultConfig.twitterCard} />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={fullImageUrl} />
<meta name="twitter:image:alt" content={title} />

<!-- 正規化リンク -->
<link rel="canonical" href={normalizedCanonical} />

<!-- Favicon -->
<link rel="icon" type="image/svg+xml" href={defaultConfig.favicon} />
<link rel="apple-touch-icon" href="/apple-touch-icon.png" />

<!-- Font Preload - 日本語フォントと絵文字の完全対応 -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link rel="preload" href="https://fonts.googleapis.com/css2?family=Yuji+Syuku&family=Inter:wght@300;400;500;600;700&family=Lora:wght@400;600&family=Cedarville+Cursive&family=Noto+Emoji:wght@300;400;500;600;700&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'" />
<noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Yuji+Syuku&family=Inter:wght@300;400;500;600;700&family=Lora:wght@400;600&family=Cedarville+Cursive&family=Noto+Emoji:wght@300;400;500;600;700&display=swap" /></noscript>

<!-- 文字エンコーディング設定 -->
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<!-- 言語設定 -->
<meta name="language" content={lang} />

<!-- GitHub Pages SEO最適化 -->
<meta name="generator" content="Astro" />
<meta name="googlebot" content="index, follow" />
<meta name="bingbot" content="index, follow" />

<!-- JSON-LD Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(jsonLD)} />

<!-- Google Analytics -->
{gtag && (
  <>
    <script async src={`https://www.googletagmanager.com/gtag/js?id=${gtag}`}></script>
    <script define:vars={{ gtagId: gtag }}>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', gtagId);
    </script>
  </>
)}
