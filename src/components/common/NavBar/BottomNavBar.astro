---
export interface Props {
  className?: string;
}

const { className = '' } = Astro.props;

// Navigation items with icons and labels
const navItems = [
  {
    href: '/panduan-lengkap-otodidak-bahasa-jepang',
    label: 'Panduan',
    icon: 'panduan',
    ariaLabel: 'Panduan - 学習ガイド',
  },
  {
    href: '/docs',
    label: 'Dokumentasi',
    icon: 'documentation',
    ariaLabel: 'Dokumentasi - ドキュメント',
  },
  {
    href: '#',
    label: 'Menu',
    icon: 'menu',
    ariaLabel: 'Menu - メニュー',
    isMenuButton: true,
  },
];

// Menu overlay items
const menuItems = [
  {
    href: '/search',
    label: 'Search',
    icon: 'search',
    ariaLabel: 'Search - 検索',
  },
  {
    href: '/tools',
    label: 'Tutorial',
    icon: 'tutorial',
    ariaLabel: 'Tutorial - 学習ガイド',
  },
  {
    href: '/',
    label: 'Home',
    icon: 'home',
    ariaLabel: 'Home - ホーム',
  },
  {
    href: '/rekomendasi-channel-youtube-belajar-bahasa-jepang',
    label: 'Rekomendasi YT Jepang',
    icon: 'youtube',
    ariaLabel: 'Rekomendasi YT Jepang - おすすめチャンネル',
  },
  {
    href: 'https://youtube.com/@yosiakefas',
    label: 'Subscribe YouTube',
    icon: 'subscribe',
    ariaLabel: 'Subscribe YouTube - チャンネル登録',
    target: '_blank',
  },
  {
    href: 'https://trakteer.id/yosiakefas/tip',
    label: 'Dukung Kami',
    icon: 'heart-plus',
    ariaLabel: 'Dukung Kami - サポート',
    target: '_blank',
  },
];
---

<nav class={`bottom-nav ${className}`}>
  {
    navItems.map(item => {
      const content = (
        <>
          <div class='nav-btn__icon'>
            {item.icon === 'panduan' && (
              <svg
                width='20'
                height='20'
                viewBox='0 0 24 24'
                fill='none'
                xmlns='http://www.w3.org/2000/svg'
                aria-hidden='true'
              >
                <path
                  d='M5 5a2 2 0 0 1 3.008-1.728l11.997 6.998a2 2 0 0 1 .003 3.458l-12 7A2 2 0 0 1 5 19z'
                  stroke='currentColor'
                  stroke-width='2'
                  stroke-linecap='round'
                  stroke-linejoin='round'
                />
              </svg>
            )}
            {item.icon === 'menu' && (
              <svg
                width='20'
                height='20'
                viewBox='0 0 24 24'
                fill='none'
                xmlns='http://www.w3.org/2000/svg'
                aria-hidden='true'
              >
                <rect
                  width='18'
                  height='18'
                  x='3'
                  y='3'
                  rx='2'
                  stroke='currentColor'
                  stroke-width='2'
                  stroke-linecap='round'
                  stroke-linejoin='round'
                />
                <path
                  d='M3 9h18'
                  stroke='currentColor'
                  stroke-width='2'
                  stroke-linecap='round'
                  stroke-linejoin='round'
                />
                <path
                  d='m9 16 3-3 3 3'
                  stroke='currentColor'
                  stroke-width='2'
                  stroke-linecap='round'
                  stroke-linejoin='round'
                />
              </svg>
            )}
            {item.icon === 'tutorial' && (
              <svg
                width='20'
                height='20'
                viewBox='0 0 24 24'
                fill='none'
                xmlns='http://www.w3.org/2000/svg'
                aria-hidden='true'
              >
                <path
                  d='M12 2L2 7L12 12L22 7L12 2Z'
                  stroke='currentColor'
                  stroke-width='2'
                  stroke-linecap='round'
                  stroke-linejoin='round'
                />
                <path
                  d='M2 17L12 22L22 17'
                  stroke='currentColor'
                  stroke-width='2'
                  stroke-linecap='round'
                  stroke-linejoin='round'
                />
                <path
                  d='M2 12L12 17L22 12'
                  stroke='currentColor'
                  stroke-width='2'
                  stroke-linecap='round'
                  stroke-linejoin='round'
                />
              </svg>
            )}
            {item.icon === 'documentation' && (
              <svg
                width='20'
                height='20'
                viewBox='0 0 24 24'
                fill='none'
                xmlns='http://www.w3.org/2000/svg'
                aria-hidden='true'
              >
                <path
                  d='M18 8c0 3.613-3.869 7.429-5.393 8.795a1 1 0 0 1-1.214 0C9.87 15.429 6 11.613 6 8a6 6 0 0 1 12 0'
                  stroke='currentColor'
                  stroke-width='2'
                  stroke-linecap='round'
                  stroke-linejoin='round'
                />
                <circle
                  cx='12'
                  cy='8'
                  r='2'
                  stroke='currentColor'
                  stroke-width='2'
                  stroke-linecap='round'
                  stroke-linejoin='round'
                />
                <path
                  d='M8.714 14h-3.71a1 1 0 0 0-.948.683l-2.004 6A1 1 0 0 0 3 22h18a1 1 0 0 0 .948-1.316l-2-6a1 1 0 0 0-.949-.684h-3.712'
                  stroke='currentColor'
                  stroke-width='2'
                  stroke-linecap='round'
                  stroke-linejoin='round'
                />
              </svg>
            )}
            {item.icon === 'home' && (
              <svg
                width='20'
                height='20'
                viewBox='0 0 24 24'
                fill='none'
                xmlns='http://www.w3.org/2000/svg'
                aria-hidden='true'
              >
                <path
                  d='M3 9L12 2L21 9V20C21 20.5304 20.7893 21.0391 20.4142 21.4142C20.0391 21.7893 19.5304 22 19 22H5C4.46957 22 3.96086 21.7893 3.58579 21.4142C3.21071 21.0391 3 20.5304 3 20V9Z'
                  stroke='currentColor'
                  stroke-width='2'
                  stroke-linecap='round'
                  stroke-linejoin='round'
                />
                <path
                  d='M9 22V12H15V22'
                  stroke='currentColor'
                  stroke-width='2'
                  stroke-linecap='round'
                  stroke-linejoin='round'
                />
              </svg>
            )}
          </div>
          <span class='nav-btn__label'>{item.label}</span>
        </>
      );

      return item.isMenuButton ? (
        <button
          class='nav-btn'
          data-icon={item.icon}
          data-menu-button='true'
          aria-label={item.ariaLabel}
          type='button'
        >
          {content}
        </button>
      ) : (
        <a
          href={item.href}
          class='nav-btn'
          data-icon={item.icon}
          aria-label={item.ariaLabel}
        >
          {content}
        </a>
      );
    })
  }
</nav>

<!-- Menu Overlay -->
<div id='menu-overlay' class='menu-overlay' aria-hidden='true'>
  <div class='menu-overlay-backdrop'></div>
  <div class='menu-overlay-content'>
    <div class='menu-overlay-header'>
      <div class='menu-overlay-title' role='heading' aria-level='2'>Menu</div>
      <div class='menu-overlay-controls'>
        <button
          class='menu-overlay-view-toggle'
          aria-label='Toggle view mode'
          title='表示モード切り替え'
        >
          <svg
            class='view-icon view-icon--list'
            width='20'
            height='20'
            viewBox='0 0 24 24'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
          >
            <line
              x1='8'
              y1='6'
              x2='21'
              y2='6'
              stroke='currentColor'
              stroke-width='2'
              stroke-linecap='round'></line>
            <line
              x1='8'
              y1='12'
              x2='21'
              y2='12'
              stroke='currentColor'
              stroke-width='2'
              stroke-linecap='round'></line>
            <line
              x1='8'
              y1='18'
              x2='21'
              y2='18'
              stroke='currentColor'
              stroke-width='2'
              stroke-linecap='round'></line>
            <line
              x1='3'
              y1='6'
              x2='4'
              y2='6'
              stroke='currentColor'
              stroke-width='2'
              stroke-linecap='round'></line>
            <line
              x1='3'
              y1='12'
              x2='4'
              y2='12'
              stroke='currentColor'
              stroke-width='2'
              stroke-linecap='round'></line>
            <line
              x1='3'
              y1='18'
              x2='4'
              y2='18'
              stroke='currentColor'
              stroke-width='2'
              stroke-linecap='round'></line>
          </svg>
          <svg
            class='view-icon view-icon--grid'
            width='20'
            height='20'
            viewBox='0 0 24 24'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
          >
            <rect
              x='3'
              y='3'
              width='7'
              height='7'
              rx='1'
              stroke='currentColor'
              stroke-width='2'></rect>
            <rect
              x='14'
              y='3'
              width='7'
              height='7'
              rx='1'
              stroke='currentColor'
              stroke-width='2'></rect>
            <rect
              x='3'
              y='14'
              width='7'
              height='7'
              rx='1'
              stroke='currentColor'
              stroke-width='2'></rect>
            <rect
              x='14'
              y='14'
              width='7'
              height='7'
              rx='1'
              stroke='currentColor'
              stroke-width='2'></rect>
          </svg>
        </button>
        <button
          class='menu-overlay-close'
          aria-label='Close menu'
          title='閉じる'
        >
          <svg
            width='24'
            height='24'
            viewBox='0 0 24 24'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
          >
            <path
              d='M18 6L6 18'
              stroke='currentColor'
              stroke-width='2'
              stroke-linecap='round'
              stroke-linejoin='round'></path>
            <path
              d='M6 6L18 18'
              stroke='currentColor'
              stroke-width='2'
              stroke-linecap='round'
              stroke-linejoin='round'></path>
          </svg>
        </button>
      </div>
    </div>
    <div class='menu-overlay-items'>
      {
        menuItems.map((item, index) => (
          <>
            {item.icon === 'subscribe' && <hr class='menu-overlay-divider' />}
            <a
              href={item.href}
              class='menu-overlay-item'
              aria-label={item.ariaLabel}
              target={item.target || '_self'}
            >
              <div class='menu-overlay-icon'>
                {item.icon === 'search' && (
                  <svg
                    width='24'
                    height='24'
                    viewBox='0 0 24 24'
                    fill='none'
                    xmlns='http://www.w3.org/2000/svg'
                  >
                    <path
                      d='M14 2v4a2 2 0 0 0 2 2h4'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                    <path
                      d='M4.268 21a2 2 0 0 0 1.727 1H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                    <path
                      d='m9 18-1.5-1.5'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                    <circle
                      cx='5'
                      cy='14'
                      r='3'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                  </svg>
                )}
                {item.icon === 'tutorial' && (
                  <svg
                    width='24'
                    height='24'
                    viewBox='0 0 24 24'
                    fill='none'
                    xmlns='http://www.w3.org/2000/svg'
                  >
                    <path
                      d='M10 15h4'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                    <path
                      d='m14.817 10.995-.971-1.45 1.034-1.232a2 2 0 0 0-2.025-3.238l-1.82.364L9.91 3.885a2 2 0 0 0-3.625.748L6.141 6.55l-1.725.426a2 2 0 0 0-.19 3.756l.657.27'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                    <path
                      d='m18.822 10.995 2.26-5.38a1 1 0 0 0-.557-1.318L16.954 2.9a1 1 0 0 0-1.281.533l-.924 2.122'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                    <path
                      d='M4 12.006A1 1 0 0 1 4.994 11H19a1 1 0 0 1 1 1v7a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                  </svg>
                )}
                {item.icon === 'youtube' && (
                  <svg
                    width='24'
                    height='24'
                    viewBox='0 0 24 24'
                    fill='none'
                    xmlns='http://www.w3.org/2000/svg'
                  >
                    <path
                      d='M22.54 6.42C22.4212 5.94541 22.1793 5.51057 21.8387 5.15941C21.498 4.80824 21.0707 4.55318 20.6 4.42C18.88 4 12 4 12 4C12 4 5.12 4 3.4 4.42C2.92931 4.55318 2.50198 4.80824 2.16135 5.15941C1.82072 5.51057 1.57881 5.94541 1.46 6.42C1.14521 8.18656 0.991235 9.97622 1 11.77C0.991235 13.5638 1.14521 15.3534 1.46 17.12C1.57881 17.5946 1.82072 18.0294 2.16135 18.3806C2.50198 18.7317 2.92931 18.9868 3.4 19.12C5.12 19.54 12 19.54 12 19.54C12 19.54 18.88 19.54 20.6 19.12C21.0707 18.9868 21.498 18.7317 21.8387 18.3806C22.1793 18.0294 22.4212 17.5946 22.54 17.12C22.8548 15.3534 23.0088 13.5638 23 11.77C23.0088 9.97622 22.8548 8.18656 22.54 6.42Z'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                    <polygon
                      points='9.75,15.02 15.5,11.77 9.75,8.52'
                      fill='currentColor'
                    />
                  </svg>
                )}
                {item.icon === 'subscribe' && (
                  <svg
                    width='24'
                    height='24'
                    viewBox='0 0 24 24'
                    fill='none'
                    xmlns='http://www.w3.org/2000/svg'
                  >
                    <path
                      d='M22.54 6.42C22.4212 5.94541 22.1793 5.51057 21.8387 5.15941C21.498 4.80824 21.0707 4.55318 20.6 4.42C18.88 4 12 4 12 4C12 4 5.12 4 3.4 4.42C2.92931 4.55318 2.50198 4.80824 2.16135 5.15941C1.82072 5.51057 1.57881 5.94541 1.46 6.42C1.14521 8.18656 0.991235 9.97622 1 11.77C0.991235 13.5638 1.14521 15.3534 1.46 17.12C1.57881 17.5946 1.82072 18.0294 2.16135 18.3806C2.50198 18.7317 2.92931 18.9868 3.4 19.12C5.12 19.54 12 19.54 12 19.54C12 19.54 18.88 19.54 20.6 19.12C21.0707 18.9868 21.498 18.7317 21.8387 18.3806C22.1793 18.0294 22.4212 17.5946 22.54 17.12C22.8548 15.3534 23.0088 13.5638 23 11.77C23.0088 9.97622 22.8548 8.18656 22.54 6.42Z'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                    <polygon
                      points='9.75,15.02 15.5,11.77 9.75,8.52'
                      fill='currentColor'
                    />
                  </svg>
                )}
                {item.icon === 'home' && (
                  <svg
                    width='24'
                    height='24'
                    viewBox='0 0 24 24'
                    fill='none'
                    xmlns='http://www.w3.org/2000/svg'
                  >
                    <path
                      d='M3 9L12 2L21 9V20C21 20.5304 20.7893 21.0391 20.4142 21.4142C20.0391 21.7893 19.5304 22 19 22H5C4.46957 22 3.96086 21.7893 3.58579 21.4142C3.21071 21.0391 3 20.5304 3 20V9Z'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                    <path
                      d='M9 22V12H15V22'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                  </svg>
                )}
                {item.icon === 'heart-plus' && (
                  <svg
                    width='24'
                    height='24'
                    viewBox='0 0 24 24'
                    fill='none'
                    xmlns='http://www.w3.org/2000/svg'
                  >
                    <path
                      d='m14.479 19.374-.971.939a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5a5.5 5.5 0 0 1 9.591-3.676.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5a5.2 5.2 0 0 1-.219 1.49'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                    <path
                      d='M15 15h6'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                    <path
                      d='M18 12v6'
                      stroke='currentColor'
                      stroke-width='2'
                      stroke-linecap='round'
                      stroke-linejoin='round'
                    />
                  </svg>
                )}
              </div>
              <span class='menu-overlay-label'>{item.label}</span>
            </a>
          </>
        ))
      }
    </div>
  </div>
</div>

<style is:global>
  /* ========== ASTRO NATIVE CSS OPTIMIZATION - UNIFIED DESIGN SYSTEM ========== */

  /* 
   * ARCHITECTURAL DECISION: Unified design system with Navbar.astro
   * This ensures consistent visual language across all navigation components
   * 
   * PERFORMANCE CONSIDERATIONS:
   * - Shared design tokens reduce CSS bundle size
   * - Consistent animations improve perceived performance
   * - Unified color system enables better theme management
   * 
   * FUTURE EXTENSIBILITY:
   * - Shared tokens enable easy theme switching
   * - Consistent patterns improve maintainability
   * - Unified animations create cohesive user experience
   */

  /* ===== DESIGN TOKENS - UNIFIED WITH NAVBAR ===== */
  .bottom-nav {
    /* Layout properties */
    position: fixed;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: var(--z-BottomNavBar-bottom-nav);

    /* デフォルトは表示（モバイル） */
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--bottom-nav-gap);

    /* 下と左右を少し離す（端にくっつかない） */
    margin: var(--bottom-nav-margin);
    margin-bottom: calc(var(--bottom-nav-margin) + var(--safe-area-bottom));
    padding: var(--bottom-nav-padding);
    border: none;
    border-radius: var(--bottom-nav-radius-xl);

    /* 最適化: 簡素化された背景効果 */
    background:
      linear-gradient(
        135deg,
        oklch(6% 0.008 270deg / 0.15) 0%,
        oklch(8% 0.01 270deg / 0.12) 50%,
        oklch(6% 0.008 270deg / 0.15) 100%
      ),
      radial-gradient(
        ellipse at 50% 0%,
        oklch(65% 0.18 280deg / 0.1) 0%,
        transparent 70%
      );

    /* UNIFIED backdrop filters - Navbar.astroと同じ */
    backdrop-filter: blur(12px) saturate(120%);

    /* 最適化: 軽量化されたshadow system */
    box-shadow:
      0 4px 16px oklch(0% 0 0deg / 0.12),
      0 2px 8px oklch(0% 0 0deg / 0.08),
      inset 0 1px 0 oklch(100% 0 0deg / 0.1);

    /* UNIFIED transition system - Navbar.astroと同じ */
    transition:
      background 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      backdrop-filter 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      box-shadow 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);

    /* GPU acceleration - 最適化: 必要な時のみ */
    will-change: transform, box-shadow;

    /* 小さな画面での調整 */
    @media (max-width: 360px) {
      gap: var(--bottom-nav-gap-small);
      margin: var(--bottom-nav-margin-small);
      margin-bottom: calc(
        var(--bottom-nav-margin-small) + var(--safe-area-bottom)
      );
      padding: var(--bottom-nav-padding-small);
    }

    /* GPU acceleration - モバイルでは削除 */
    @media (min-width: 769px) {
      transform: translateZ(0);
    }

    /* デスクトップでは非表示 */
    @media (min-width: 1024px) {
      display: none;
    }

    /* UNIFIED Color Tokens - Navbar.astroと同じ */
    --bottom-nav-white: oklch(100% 0 0deg);
    --bottom-nav-white-05: oklch(100% 0 0deg / 0.05);
    --bottom-nav-white-08: oklch(100% 0 0deg / 0.08);
    --bottom-nav-white-10: oklch(100% 0 0deg / 0.1);
    --bottom-nav-white-15: oklch(100% 0 0deg / 0.15);
    --bottom-nav-white-20: oklch(100% 0 0deg / 0.2);
    --bottom-nav-white-25: oklch(100% 0 0deg / 0.25);
    --bottom-nav-black: oklch(0% 0 0deg);
    --bottom-nav-black-05: oklch(0% 0 0deg / 0.05);
    --bottom-nav-black-10: oklch(0% 0 0deg / 0.1);
    --bottom-nav-black-15: oklch(0% 0 0deg / 0.15);
    --bottom-nav-black-6: oklch(6% 0.008 270deg);
    --bottom-nav-black-8: oklch(8% 0.01 270deg);
    --bottom-nav-black-25: oklch(25% 0.015 270deg);

    /* UNIFIED Primary Colors - Medium to High Contrast Dark Violet */
    --bottom-nav-primary: oklch(45% 0.25 280deg / 0.65);
    --bottom-nav-primary-dark: oklch(40% 0.3 280deg / 0.65);
    --bottom-nav-primary-light: oklch(50% 0.2 280deg / 0.65);
    --bottom-nav-primary-18: oklch(65% 0.18 280deg);
    --bottom-nav-primary-25: oklch(65% 0.25 280deg / 0.25);
    --bottom-nav-primary-30: oklch(65% 0.25 280deg / 0.3);
    --bottom-nav-primary-70: oklch(70% 0.12 280deg);

    /* UNIFIED Secondary Accent Colors - Navbar.astroと同じ */
    --bottom-nav-accent-orange: oklch(65% 0.18 15deg);
    --bottom-nav-accent-blue: oklch(65% 0.25 280deg);
    --bottom-nav-accent-green: oklch(70% 0.15 45deg);

    /* UNIFIED Text Colors - Navbar.astroと同じ */
    --bottom-nav-text-primary: oklch(98% 0.002 270deg);
    --bottom-nav-text-secondary: oklch(85% 0.002 270deg);
    --bottom-nav-text-muted: oklch(75% 0.002 270deg);

    /* UNIFIED GlassMorphism Tokens - Navbar.astroと同じ */
    --bottom-nav-glass-bg: oklch(6% 0.008 270deg / 0.12);
    --bottom-nav-glass-bg-8: oklch(8% 0.01 270deg / 0.08);
    --bottom-nav-glass-border: oklch(25% 0.015 270deg / 0.15);
    --bottom-nav-glass-glow: oklch(65% 0.18 280deg / 0.08);
    --bottom-nav-glass-glow-60: oklch(65% 0.18 280deg / 0.6);

    /* UNIFIED Interactive State Tokens - Navbar.astroと同じ */
    --bottom-nav-interactive-hover: oklch(98% 0.002 270deg / 0.1);
    --bottom-nav-interactive-focus: oklch(98% 0.002 270deg / 0.15);
    --bottom-nav-interactive-active: oklch(98% 0.002 270deg / 0.2);

    /* UNIFIED Brand Tokens - Navbar.astroと同じ */
    --bottom-nav-brand-glow: oklch(65% 0.18 280deg / 0.6);
    --bottom-nav-brand-ruby: oklch(65% 0.008 270deg);
    --bottom-nav-brand-ruby-hover: oklch(70% 0.12 280deg);

    /* Spacing Tokens */
    --bottom-nav-margin: 0.75rem;
    --bottom-nav-margin-small: 0.5rem;
    --bottom-nav-padding: 0.5rem;
    --bottom-nav-padding-small: 0.375rem;
    --bottom-nav-gap: 0.25rem;
    --bottom-nav-gap-small: 0.125rem;

    /* UNIFIED Border Radius Tokens - Navbar.astroと同じ */
    --bottom-nav-radius-sm: 0.375rem;
    --bottom-nav-radius-md: 0.75rem;
    --bottom-nav-radius-lg: 1.25rem;
    --bottom-nav-radius-xl: var(--radius-xl, 1rem);

    /* UNIFIED Backdrop Filter Tokens */
    --bottom-nav-blur-base: blur(16px) saturate(125%) brightness(1.05)
      contrast(1.05);
    --bottom-nav-blur-transparent: blur(0) saturate(100%) brightness(1)
      contrast(1);

    /* ---------- Navigation Buttons - UNIFIED WITH MOBILE-MENU-BTN DESIGN ---------- */
    .nav-btn {
      position: relative;
      display: flex;
      flex: 1 1 0;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      overflow: hidden;
      width: 0; /* 強制的に等しい幅を保証 */
      min-height: 48px;
      padding: 0.75rem 0.5rem;
      border: none;
      border-radius: var(--bottom-nav-radius-lg);

      /* UNIFIED background - mobile-menu-btnと完全に同じ、グラデーション透明化 */
      background:
        linear-gradient(var(--bottom-nav-primary), var(--bottom-nav-primary))
          padding-box,
        linear-gradient(
            135deg,
            oklch(100% 0 0deg / 0.3) 0%,
            oklch(98% 0 0deg / 0.3) 50%,
            oklch(95% 0 0deg / 0.3) 100%
          )
          border-box;
      color: var(--bottom-nav-text-primary);
      font-size: 0.8125rem;
      font-weight: 600;
      text-decoration: none;
      letter-spacing: 0.02em;
      cursor: pointer;
      transform: translateZ(0);

      /* UNIFIED transition system - mobile-menu-btnと同じ */
      transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      touch-action: manipulation;

      /* UNIFIED shadow system - mobile-menu-btnと同じ、薄い影追加 */
      box-shadow:
        0 6px 20px oklch(0% 0 0deg / 0.08),
        0 4px 16px oklch(65% 0.25 280deg / 0.15),
        0 2px 8px oklch(0% 0 0deg / 0.06),
        inset 0 1px 0 oklch(100% 0 0deg / 0.1);
      will-change: transform, background, box-shadow, filter;
      -webkit-tap-highlight-color: transparent;
      filter: drop-shadow(0 0 8px oklch(65% 0.25 280deg / 0.3));

      /* モバイル: アニメーション無効化 */
      @media (max-width: 768px) {
        transform: none;
        transition-duration: 0.01ms;
        will-change: auto;
      }
    }

    .nav-btn::before {
      position: absolute;
      border-radius: inherit;
      background: linear-gradient(
        135deg,
        oklch(100% 0 0deg / 0.1) 0%,
        transparent 50%,
        oklch(100% 0 0deg / 0.05) 100%
      );
      opacity: 0;
      transition: opacity 0.4s ease;
      content: '';
      inset: 0;

      /* モバイル: アニメーション無効化 */
      @media (max-width: 768px) {
        transition-duration: 0.01ms;
      }
    }

    /* Moved hover::before to reduce specificity */

    .nav-btn--hover {
      background:
        linear-gradient(
            var(--bottom-nav-primary-light),
            var(--bottom-nav-primary-light)
          )
          padding-box,
        linear-gradient(
            135deg,
            oklch(100% 0 0deg / 0.4) 0%,
            oklch(98% 0 0deg / 0.4) 50%,
            oklch(95% 0 0deg / 0.4) 100%
          )
          border-box;
      box-shadow:
        0 10px 40px oklch(0% 0 0deg / 0.12),
        0 8px 32px oklch(65% 0.25 280deg / 0.25),
        0 4px 16px oklch(0% 0 0deg / 0.1),
        inset 0 1px 0 oklch(100% 0 0deg / 0.2);
      filter: drop-shadow(0 0 16px oklch(65% 0.25 280deg / 0.4));

      /* モバイル: transformを完全無効化 */
      @media (max-width: 768px) {
        transform: none;
      }

      /* デスクトップ: transformアニメーション */
      @media (min-width: 769px) {
        transform: translateZ(0) translateY(-2px) scale(1.02);
      }

      &::before {
        opacity: 1;
      }
    }

    /* ---------- SVG Icon System - UNIFIED WITH NAVBAR ---------- */
    .nav-btn__icon {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 0.375rem;
      transform: translateZ(0);
      transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      will-change: transform, filter;

      /* モバイル: アニメーション無効化 */
      @media (max-width: 768px) {
        transform: none;
        transition-duration: 0.01ms;
        will-change: auto;
      }

      svg {
        width: 1.25em;
        max-width: 100%;
        height: 1.25em;
        max-height: 100%;
        color: oklch(98% 0.005 50deg);
        transform: translateZ(0);
        transition:
          color var(--duration-fast) ease,
          transform var(--duration-fast) ease,
          opacity var(--duration-fast) ease;
        flex-shrink: 0;
        fill: none;
        stroke: currentColor;
        stroke-width: 2.5;
        vertical-align: middle;
        will-change: transform;

        /* モバイル: アニメーション無効化 */
        @media (max-width: 768px) {
          transform: none;
          transition-duration: 0.01ms;
          will-change: auto;
        }
      }
    }

    /* ---------- Menu Overlay Icon SVG Styling - Properly Ordered ---------- */
    .menu-overlay-icon svg {
      width: 20px;
      height: 20px;
      stroke-width: 2.5;
      transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    /* ---------- Navigation Label - UNIFIED WITH NAVBAR ---------- */
    .nav-btn__label {
      overflow: hidden;
      max-width: 100%;
      color: oklch(98% 0.005 50deg);
      font-size: 0.75rem;
      font-weight: 700;
      line-height: 1.2;
      text-align: center;
      letter-spacing: 0.025em;

      /* 長いテキストの対応 */
      white-space: nowrap;
      transform: translateZ(0);
      transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      will-change: color, transform;
      text-overflow: ellipsis;

      /* モバイル: アニメーション無効化 */
      @media (max-width: 768px) {
        transform: none;
        transition-duration: 0.01ms;
        will-change: auto;
      }

      /* 小さな画面での調整 */
      @media (max-width: 360px) {
        font-size: 0.6875rem;
      }

      /* 非常に小さな画面では2行表示を許可 */
      @media (max-width: 320px) {
        display: -webkit-box;
        overflow: hidden;
        max-height: 2.2em;
        line-height: 1.1;
        white-space: normal;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
      }
    }

    /* ---------- Active State Styling - MOVED for correct specificity order ---------- */
    .nav-btn--active {
      box-shadow:
        0 3px 12px oklch(0% 0 0deg / 0.06),
        0 2px 8px oklch(65% 0.25 280deg / 0.15),
        0 1px 4px oklch(0% 0 0deg / 0.05),
        inset 0 1px 0 oklch(100% 0 0deg / 0.1);
      filter: drop-shadow(0 0 4px oklch(65% 0.25 280deg / 0.2));

      /* 小さな画面での調整 */
      @media (max-width: 360px) {
        min-height: 44px;
        padding: 0.625rem 0.375rem;
      }

      /* モバイル: アクティブ状態を簡略化 */
      @media (max-width: 768px) {
        transform: none;
      }

      /* デスクトップ: transformアニメーション */
      @media (min-width: 769px) {
        transform: translateZ(0) translateY(0) scale(0.98);
      }

      /* Touch Device Optimization */
      @media (hover: none) and (pointer: coarse) {
        /* モバイル: タップ時の縮小効果を無効化 */
        transform: none;
        box-shadow:
          0 1px 4px oklch(from var(--token-black-base) l c h / 0.08),
          0 1px 2px oklch(from var(--token-black-base) l c h / 0.06),
          inset 0 1px 0 oklch(100% 0 0deg / 0.1),
          inset 0 -1px 0 oklch(from var(--token-black-base) l c h / 0.08);
        filter: drop-shadow(
          0 1px 4px oklch(from var(--token-black-base) l c h / 0.08)
        );
      }

      /* 子要素のスタイリング */
      .nav-btn__icon {
        @media (max-width: 768px) {
          transform: none;
        }

        @media (min-width: 769px) {
          transform: scale(0.95);
        }
      }

      svg {
        color: oklch(92% 0.008 55deg);
        opacity: 0.8;

        @media (max-width: 768px) {
          transform: none;
        }

        @media (min-width: 769px) {
          transform: translateZ(0) scale(0.95);
        }
      }

      .nav-btn__label {
        transform: none;
        text-shadow: none;
      }
    }
  }

  /* ========== MENU OVERLAY STYLES - UNIFIED WITH NAVBAR DESIGN ========== */
  .menu-overlay {
    position: fixed;
    inset: 0;
    z-index: 9999;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    visibility: hidden;
    transition:
      opacity 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      visibility 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .menu-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .menu-overlay-backdrop {
    position: absolute;
    inset: 0;
    background: oklch(from var(--token-black-base) l c h / 0.8);

    /* モバイル最適化: backdrop-filterを簡略化 */
    @media (max-width: 768px) {
      backdrop-filter: blur(8px);
    }

    /* デスクトップ: 強力な効果 */
    @media (min-width: 769px) {
      backdrop-filter: blur(12px) saturate(120%);
    }
  }

  .menu-overlay-content {
    position: relative;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    width: 90%;
    max-width: 420px;
    max-height: 75vh;
    border: 1px solid oklch(25% 0.015 270deg / 0.15);
    border-radius: 1.5rem;

    /* 最適化: 具体的なプロパティのみアニメーション */
    transition:
      transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      opacity 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);

    /* モバイル最適化 */
    @media (max-width: 768px) {
      max-height: 80dvh;
      background: oklch(6% 0.008 270deg / 0.5);
      backdrop-filter: blur(8px);
      box-shadow:
        0 10px 30px oklch(from var(--token-black-base) l c h / 0.3),
        0 4px 12px oklch(from var(--token-black-base) l c h / 0.15);
      transform: none;
      will-change: transform;
    }

    /* デスクトップ最適化 */
    @media (min-width: 769px) {
      background:
        linear-gradient(
          135deg,
          oklch(6% 0.008 270deg / 0.15) 0%,
          oklch(8% 0.01 270deg / 0.12) 50%,
          oklch(6% 0.008 270deg / 0.15) 100%
        ),
        radial-gradient(
          ellipse at 50% 0%,
          oklch(65% 0.18 280deg / 0.1) 0%,
          transparent 70%
        );
      backdrop-filter: blur(12px) saturate(120%);
      box-shadow:
        0 8px 32px oklch(from var(--token-black-base) l c h / 0.25),
        0 4px 16px oklch(from var(--token-black-base) l c h / 0.15),
        inset 0 1px 0 oklch(100% 0 0deg / 0.1);
      transform: scale(0.95) translateY(10px);
    }
  }

  .menu-overlay.active .menu-overlay-content {
    @media (min-width: 769px) {
      transform: scale(1) translateY(0);
    }

    @media (max-width: 768px) {
      transform: none;
    }
  }

  .menu-overlay-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 1.5rem 1rem;
    border-bottom: 1px solid oklch(100% 0 0deg / 0.1);
    background: linear-gradient(
      135deg,
      oklch(100% 0 0deg / 0.05) 0%,
      oklch(100% 0 0deg / 0.02) 100%
    );

    /* ヘッダー固定: flex-shrinkで縮小を防止 */
    flex-shrink: 0;
  }

  .menu-overlay-controls {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .menu-overlay-view-toggle {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    border: 1px solid oklch(100% 0 0deg / 0.15);
    border-radius: 50%;
    background: linear-gradient(
      135deg,
      oklch(100% 0 0deg / 0.1) 0%,
      oklch(100% 0 0deg / 0.05) 100%
    );
    color: oklch(from var(--token-white-base) l c h);
    cursor: pointer;
    transition:
      background 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      border-color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    box-shadow:
      0 2px 8px oklch(from var(--token-black-base) l c h / 0.1),
      inset 0 1px 0 oklch(100% 0 0deg / 0.1);
  }

  .view-icon {
    position: absolute;
    transition:
      opacity 0.2s ease,
      transform 0.2s ease;
  }

  /* デフォルトはグリッドビュー */
  .view-icon--list {
    opacity: 0;
  }

  .view-icon--grid {
    opacity: 1;
  }

  /* List view active state */
  .menu-overlay-content:not(.view-grid) .view-icon--list {
    opacity: 1;
  }

  .menu-overlay-content:not(.view-grid) .view-icon--grid {
    opacity: 0;
  }

  /* Grid view active state */
  .menu-overlay-content.view-grid .view-icon--list {
    opacity: 0;
  }

  .menu-overlay-content.view-grid .view-icon--grid {
    opacity: 1;
  }

  /* Desktop hover effects */
  @media (hover: hover) and (pointer: fine) {
    .menu-overlay-view-toggle:hover {
      background: linear-gradient(
        135deg,
        oklch(100% 0 0deg / 0.2) 0%,
        oklch(100% 0 0deg / 0.1) 100%
      );
      border-color: oklch(100% 0 0deg / 0.25);
      transform: scale(1.05);
      box-shadow:
        0 4px 12px oklch(from var(--token-black-base) l c h / 0.15),
        inset 0 1px 0 oklch(100% 0 0deg / 0.15);
    }
  }

  .menu-overlay-view-toggle:active {
    transform: scale(0.95);
    box-shadow:
      0 1px 4px oklch(from var(--token-black-base) l c h / 0.1),
      inset 0 1px 0 oklch(100% 0 0deg / 0.05);
  }

  .menu-overlay-title {
    margin: 0;
    color: oklch(from var(--token-white-base) l c h);
    font-size: 1.5rem;
    font-weight: 700;
    letter-spacing: 0.02em;

    /* UNIFIED text shadow - Navbar.astroと同じ */
    text-shadow:
      0 2px 4px oklch(from var(--token-black-base) l c h / 0.4),
      0 1px 2px oklch(from var(--token-black-base) l c h / 0.5),
      0 0 8px oklch(from var(--token-black-base) l c h / 0.3);
  }

  .menu-overlay-close {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    border: 1px solid oklch(100% 0 0deg / 0.15);
    border-radius: 50%;
    background: linear-gradient(
      135deg,
      oklch(100% 0 0deg / 0.1) 0%,
      oklch(100% 0 0deg / 0.05) 100%
    );
    color: oklch(from var(--token-white-base) l c h);
    cursor: pointer;

    /* 最適化: 具体的なプロパティのみアニメーション */
    transition:
      background 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      border-color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);

    /* UNIFIED shadow system - Navbar.astroと同じ */
    box-shadow:
      0 2px 8px oklch(from var(--token-black-base) l c h / 0.1),
      inset 0 1px 0 oklch(100% 0 0deg / 0.1);
  }

  /* デスクトップのみホバー効果 */
  @media (hover: hover) and (pointer: fine) {
    .menu-overlay-close:hover {
      background: linear-gradient(
        135deg,
        oklch(100% 0 0deg / 0.2) 0%,
        oklch(100% 0 0deg / 0.1) 100%
      );
      border-color: oklch(100% 0 0deg / 0.25);
      transform: scale(1.05);
      box-shadow:
        0 4px 12px oklch(from var(--token-black-base) l c h / 0.15),
        inset 0 1px 0 oklch(100% 0 0deg / 0.15);
    }
  }

  .menu-overlay-close:active {
    transform: scale(0.95);
    box-shadow:
      0 1px 4px oklch(from var(--token-black-base) l c h / 0.1),
      inset 0 1px 0 oklch(100% 0 0deg / 0.05);
  }

  .menu-overlay-items {
    display: flex;

    /* アイテム部分スクロール可能: 残りのスペースを全て使用 */
    flex: 1;
    flex-direction: column;
    gap: 0.75rem;
    overflow-y: auto;
    padding: 1rem 1.5rem 1.5rem;

    /* スクロールバーのカスタマイズ */
    scrollbar-width: thin;
    scrollbar-color: oklch(100% 0 0deg / 0.3) transparent;

    /* スムーズなトランジション */
    transition: gap 0.3s ease;

    /* モバイル最適化: ボタンサイズとスペーシングの調整 */
    @media (max-width: 768px) {
      gap: 0.5rem; /* ボタン間のスペースを25%削減 */
      padding: 0.75rem 1rem 1rem; /* パディングも削減 */

      /* WebKit系ブラウザのスクロールバーカスタマイズ */
      scrollbar-width: thin;
      scrollbar-color: oklch(100% 0 0deg / 0.3) transparent;
    }

    /* WebKit系ブラウザのスクロールバーカスタマイズ */
    &::-webkit-scrollbar {
      @media (max-width: 768px) {
        width: 4px;
      }
    }

    &::-webkit-scrollbar-track {
      @media (max-width: 768px) {
        background: transparent;
      }
    }

    &::-webkit-scrollbar-thumb {
      @media (max-width: 768px) {
        border-radius: 2px;
        background: oklch(100% 0 0deg / 0.3);
      }

      &:hover {
        @media (max-width: 768px) {
          background: oklch(100% 0 0deg / 0.5);
        }
      }
    }
  }

  .menu-overlay-divider {
    width: 100%;
    height: 1px;
    margin: 0.5rem 0;
    border: none;
    background: linear-gradient(
      90deg,
      transparent 0%,
      oklch(from var(--token-white-base) l c h / 0.2) 20%,
      oklch(from var(--token-white-base) l c h / 0.4) 50%,
      oklch(from var(--token-white-base) l c h / 0.2) 80%,
      transparent 100%
    );
  }

  /* Grid view mode */
  .menu-overlay-content.view-grid .menu-overlay-items {
    display: grid;
    gap: 0.75rem;
    grid-template-columns: repeat(2, 1fr);

    /* モバイル最適化 */
    @media (max-width: 768px) {
      gap: 0.5rem;
    }
  }

  /* Grid view時にdividerを2列にまたがせる */
  .menu-overlay-content.view-grid .menu-overlay-divider {
    grid-column: 1 / -1;
    margin: 0.25rem 0;
  }

  .menu-overlay-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    border: 1px solid oklch(100% 0 0deg / 0.15);
    border-radius: 1rem;

    /* UNIFIED background - Navbar.astroと同じ */
    background: linear-gradient(
      135deg,
      oklch(100% 0 0deg / 0.08) 0%,
      oklch(100% 0 0deg / 0.05) 100%
    );
    color: oklch(from var(--token-white-base) l c h);
    text-decoration: none;
    cursor: pointer;

    /* 最適化: 具体的なプロパティのみアニメーション */
    transition:
      background 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      border-color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      flex-direction 0.3s ease,
      padding 0.3s ease;

    /* UNIFIED shadow system - Navbar.astroと同じ */
    box-shadow:
      0 2px 8px oklch(from var(--token-black-base) l c h / 0.08),
      inset 0 1px 0 oklch(100% 0 0deg / 0.1);

    /* デスクトップのみホバー効果 */
    @media (hover: hover) and (pointer: fine) {
      &:hover {
        background: linear-gradient(
          135deg,
          oklch(100% 0 0deg / 0.15) 0%,
          oklch(100% 0 0deg / 0.1) 100%
        );
        border-color: oklch(100% 0 0deg / 0.25);
        transform: translateY(-2px);
        box-shadow:
          0 8px 24px oklch(from var(--token-black-base) l c h / 0.15),
          0 4px 12px oklch(from var(--token-black-base) l c h / 0.1),
          inset 0 1px 0 oklch(100% 0 0deg / 0.15);
      }
    }

    &:active {
      transform: translateY(0);
      box-shadow:
        0 2px 8px oklch(from var(--token-black-base) l c h / 0.1),
        inset 0 1px 0 oklch(100% 0 0deg / 0.05);
    }

    /* モバイル最適化: ボタンサイズの調整 */
    @media (max-width: 768px) {
      gap: 0.75rem; /* アイコンとテキストの間隔を削減 */
      padding: 0.75rem; /* パディングを25%削減 */
    }
  }

  /* Grid view mode - アイコンビュー */
  .menu-overlay-content.view-grid .menu-overlay-item {
    flex-direction: column;
    justify-content: center;
    gap: 0.5rem;
    padding: 1.25rem 0.75rem;
    text-align: center;

    /* グリッドビュー時のモバイル最適化 */
    @media (max-width: 768px) {
      padding: 1rem 0.5rem;
    }
  }

  .menu-overlay-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    border: 1px solid oklch(100% 0 0deg / 0.1);
    border-radius: 50%;

    /* UNIFIED background - Navbar.astroと同じ */
    background: linear-gradient(
      135deg,
      var(--bottom-nav-primary) 0%,
      var(--bottom-nav-primary-dark) 100%
    );
    color: oklch(from var(--token-white-base) l c h);

    /* 最適化: 具体的なプロパティのみアニメーション */
    transition:
      background 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);

    /* UNIFIED shadow system - Navbar.astroと同じ */
    box-shadow:
      0 2px 8px oklch(from var(--token-black-base) l c h / 0.15),
      inset 0 1px 0 oklch(100% 0 0deg / 0.1);

    /* モバイル最適化: アイコンサイズの調整 */
    @media (max-width: 768px) {
      width: 36px; /* アイコンサイズを10%削減 */
      height: 36px;
    }
  }

  /* デスクトップのみホバー効果 */
  @media (hover: hover) and (pointer: fine) {
    .menu-overlay-item:hover .menu-overlay-icon {
      background: linear-gradient(
        135deg,
        var(--bottom-nav-primary-light) 0%,
        var(--bottom-nav-primary) 100%
      );
      transform: none;
      box-shadow:
        0 4px 12px oklch(from var(--token-black-base) l c h / 0.2),
        inset 0 1px 0 oklch(100% 0 0deg / 0.15);
    }
  }

  /* ---------- Menu Overlay Icon SVG Styling - Moved for proper ordering ---------- */

  .menu-overlay-label {
    color: oklch(from var(--token-white-base) l c h);
    font-size: 1rem;
    font-weight: 600;
    letter-spacing: 0.02em;

    /* 最適化: 具体的なプロパティのみアニメーション */
    transition:
      color 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      font-size 0.3s ease;

    /* UNIFIED text shadow - Navbar.astroと同じ */
    text-shadow:
      0 1px 2px oklch(from var(--token-black-base) l c h / 0.3),
      0 0 4px oklch(from var(--token-black-base) l c h / 0.2);

    /* モバイル最適化: テキストサイズの調整 */
    @media (max-width: 768px) {
      font-size: 0.9rem; /* フォントサイズを10%削減 */
    }
  }

  /* Grid view mode - ラベルサイズ調整 */
  .menu-overlay-content.view-grid .menu-overlay-label {
    font-size: 0.875rem;
    line-height: 1.3;
  }

  /* デスクトップのみホバー効果 */
  @media (hover: hover) and (pointer: fine) {
    .menu-overlay-item:hover .menu-overlay-label {
      color: oklch(from var(--token-white-base) l c h / 0.95);
      text-shadow:
        0 2px 4px oklch(from var(--token-black-base) l c h / 0.4),
        0 1px 2px oklch(from var(--token-black-base) l c h / 0.5);
    }
  }
</style>

<script is:inline>
  // Menu Overlay functionality
  document.addEventListener('DOMContentLoaded', function () {
    const menuOverlay = document.getElementById('menu-overlay');
    const menuButton = document.querySelector('[data-menu-button="true"]');
    const closeButton = document.querySelector('.menu-overlay-close');
    const viewToggleButton = document.querySelector(
      '.menu-overlay-view-toggle'
    );
    const menuOverlayContent = document.querySelector('.menu-overlay-content');

    // モバイル判定関数
    const isMobile = () => window.innerWidth <= 768;

    // View mode management with localStorage
    const VIEW_MODE_KEY = 'menu-overlay-view-mode';
    const getViewMode = () => localStorage.getItem(VIEW_MODE_KEY) || 'grid';
    const setViewMode = mode => {
      localStorage.setItem(VIEW_MODE_KEY, mode);
      updateViewMode(mode);
    };

    const updateViewMode = mode => {
      if (menuOverlayContent) {
        if (mode === 'grid') {
          menuOverlayContent.classList.add('view-grid');
        } else {
          menuOverlayContent.classList.remove('view-grid');
        }
      }
    };

    // Initialize view mode
    updateViewMode(getViewMode());

    // Toggle view mode
    if (viewToggleButton) {
      viewToggleButton.addEventListener('click', function () {
        const currentMode = getViewMode();
        const newMode = currentMode === 'list' ? 'grid' : 'list';
        setViewMode(newMode);
      });
    }

    // BEM hover and active state management
    const navButtons = document.querySelectorAll('.nav-btn');
    navButtons.forEach(button => {
      // Hover state management - モバイルではスキップ
      button.addEventListener('mouseenter', function () {
        if (isMobile()) return;
        this.classList.add('nav-btn--hover');
      });

      button.addEventListener('mouseleave', function () {
        if (isMobile()) return;
        this.classList.remove('nav-btn--hover');
      });

      // Active state management - モバイルではスキップ
      button.addEventListener('mousedown', function () {
        if (isMobile()) return;
        this.classList.add('nav-btn--active');
      });

      button.addEventListener('mouseup', function () {
        if (isMobile()) return;
        this.classList.remove('nav-btn--active');
      });

      button.addEventListener('mouseleave', function () {
        if (isMobile()) return;
        this.classList.remove('nav-btn--active');
      });

      // Touch device support - モバイルではスキップ
      button.addEventListener('touchstart', function () {
        if (isMobile()) return;
        this.classList.add('nav-btn--active');
      });

      button.addEventListener('touchend', function () {
        if (isMobile()) return;
        this.classList.remove('nav-btn--active');
      });
    });
    const backdrop = document.querySelector('.menu-overlay-backdrop');

    // Open menu overlay
    function openMenu() {
      if (menuOverlay) {
        menuOverlay.classList.add('active');
        menuOverlay.setAttribute('aria-hidden', 'false');
        document.body.style.overflow = 'hidden';
      }
    }

    // Close menu overlay
    function closeMenu() {
      if (menuOverlay) {
        menuOverlay.classList.remove('active');
        menuOverlay.setAttribute('aria-hidden', 'true');
        document.body.style.overflow = '';
      }
    }

    // Event listeners
    if (menuButton) {
      menuButton.addEventListener('click', function (e) {
        e.preventDefault();
        openMenu();
      });
    }

    if (closeButton) {
      closeButton.addEventListener('click', closeMenu);
    }

    if (backdrop) {
      backdrop.addEventListener('click', closeMenu);
    }

    // Close on escape key
    document.addEventListener('keydown', function (e) {
      if (
        e.key === 'Escape' &&
        menuOverlay &&
        menuOverlay.classList.contains('active')
      ) {
        closeMenu();
      }
    });

    // Close on menu item click
    const menuItems = document.querySelectorAll('.menu-overlay-item');
    menuItems.forEach(item => {
      item.addEventListener('click', function () {
        // Small delay to allow navigation
        setTimeout(closeMenu, 100);
      });
    });

    // Listen for custom event from Navbar to open menu overlay
    document.addEventListener('openMenuOverlay', function (event) {
      if (event.detail && event.detail.source === 'navbar') {
        openMenu();
      }
    });
  });
</script>
