---
export interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
  maxVisiblePages?: number;
  showPageInfo?: boolean;
  className?: string;
}

const {
  currentPage,
  totalPages,
  baseUrl,
  maxVisiblePages = 5,
  showPageInfo = true,
  className = '',
} = Astro.props;

// バリデーション
if (
  !Number.isInteger(currentPage) ||
  !Number.isInteger(totalPages) ||
  typeof baseUrl !== 'string' ||
  currentPage > totalPages ||
  totalPages <= 1
) {
  return null;
}

// 表示するページ番号の計算（3ページ固定）
function getVisiblePages(
  current: number,
  total: number,
  max: number = 3
): number[] {
  if (total <= 3) {
    return Array.from({ length: total }, (_, i) => i + 1);
  }

  // 常に3ページを表示するロジック
  let start: number;

  if (current <= 2) {
    // ページ1-2の場合は1,2,3を表示
    start = 1;
  } else if (current >= total - 1) {
    // 最後の2ページの場合は最後の3ページを表示
    start = Math.max(1, total - 2);
  } else {
    // 中間ページの場合は現在ページを中心に3ページ表示
    start = current - 1;
  }

  const end = Math.min(total, start + 2);
  return Array.from({ length: end - start + 1 }, (_, i) => start + i);
}

// URL生成
function getPageUrl(page: number): string {
  return page === 1 ? baseUrl : `${baseUrl}/page-${page}`;
}

const visiblePages = getVisiblePages(currentPage, totalPages, 3);
const prevPageUrl = currentPage > 1 ? getPageUrl(currentPage - 1) : null;
const nextPageUrl =
  currentPage < totalPages ? getPageUrl(currentPage + 1) : null;

// 構造化データ
const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'CollectionPage',
  pagination: {
    '@type': 'Pagination',
    currentPage,
    totalPages,
    ...(prevPageUrl && { previousPage: prevPageUrl }),
    ...(nextPageUrl && { nextPage: nextPageUrl }),
  },
};
---

<nav
  class={`glassmorphism pagination-container ${className}`}
  role='navigation'
  aria-label='Paginasi'
  aria-live='polite'
>
  <!-- 構造化データ -->
  <script
    type='application/ld+json'
    set:html={JSON.stringify(structuredData)}
  />
  <div class='pagination-controls' role='group' aria-label='Navigasi halaman'>
    <div class='pagination-numbers' role='group' aria-label='Nomor halaman'>
      {
        visiblePages[0] > 1 && (
          <>
            <a
              href={getPageUrl(1)}
              class='glassmorphism pagination-number pagination-ellipsis'
              aria-label='Pindah ke halaman 1'
            >
              1
            </a>
            {visiblePages[0] > 2 && (
              <span class='pagination-ellipsis-dots' aria-hidden='true'>
                ...
              </span>
            )}
          </>
        )
      }

      {
        visiblePages.map(page =>
          page === currentPage ? (
            <span
              class='pagination-number pagination-current'
              aria-current='page'
              aria-label={`Halaman ${page} (halaman saat ini)`}
            >
              {page}
            </span>
          ) : (
            <a
              href={getPageUrl(page)}
              class='glassmorphism pagination-number'
              aria-label={`Pindah ke halaman ${page}`}
            >
              {page}
            </a>
          )
        )
      }

      {
        visiblePages[visiblePages.length - 1] < totalPages && (
          <>
            {visiblePages[visiblePages.length - 1] < totalPages - 1 && (
              <span class='pagination-ellipsis-dots' aria-hidden='true'>
                ...
              </span>
            )}
            <a
              href={getPageUrl(totalPages)}
              class='glassmorphism pagination-number pagination-ellipsis'
              aria-label={`Pindah ke halaman ${totalPages}`}
            >
              {totalPages}
            </a>
          </>
        )
      }
    </div>

    <div
      class='pagination-nav-buttons'
      role='group'
      aria-label='Tombol navigasi'
    >
      <a
        href={prevPageUrl || '#'}
        class={`glassmorphism pagination-btn pagination-prev ${!prevPageUrl ? 'pagination-disabled' : ''}`}
        aria-label={prevPageUrl
          ? 'Pindah ke halaman sebelumnya'
          : 'Halaman sebelumnya (tidak tersedia)'}
        aria-disabled={!prevPageUrl}
        rel={prevPageUrl ? 'prev' : undefined}
        tabindex={prevPageUrl ? '0' : '-1'}
      >
        <svg
          class='pagination-icon'
          viewBox='0 0 24 24'
          fill='none'
          stroke='currentColor'
          stroke-width='2'
        >
          <path d='M15 18l-6-6 6-6'></path>
        </svg>
        <span class='pagination-btn-text'>Sebelumnya</span>
      </a>

      <a
        href={nextPageUrl || '#'}
        class={`glassmorphism pagination-btn pagination-next ${!nextPageUrl ? 'pagination-disabled' : ''}`}
        aria-label={nextPageUrl
          ? 'Pindah ke halaman berikutnya'
          : 'Halaman berikutnya (tidak tersedia)'}
        aria-disabled={!nextPageUrl}
        rel={nextPageUrl ? 'next' : undefined}
        tabindex={nextPageUrl ? '0' : '-1'}
      >
        <span class='pagination-btn-text'>Selanjutnya</span>
        <svg
          class='pagination-icon'
          viewBox='0 0 24 24'
          fill='none'
          stroke='currentColor'
          stroke-width='2'
        >
          <path d='M9 18l6-6-6-6'></path>
        </svg>
      </a>
    </div>
  </div>

  {
    showPageInfo && (
      <div class='pagination-info'>
        <div class='pagination-progress'>
          <div
            class='pagination-progress-bar'
            style={`width: ${(currentPage / totalPages) * 100}%`}
            aria-hidden='true'
          />
        </div>
      </div>
    )
  }
</nav>

<style is:global>
  /* ===== CSS変数定義（モバイルファースト） ===== */
  :root {
    /* カラーパレット */
    --pagination-primary-hue: 280deg;
    --pagination-primary-lightness: 30%;
    --pagination-primary-chroma: 0.2;
    --pagination-primary-color: oklch(
      var(--pagination-primary-lightness) var(--pagination-primary-chroma)
        var(--pagination-primary-hue)
    );
    --pagination-primary-hover-lightness: 20%;
    --pagination-primary-hover-chroma: 0.3;
    --pagination-primary-hover-color: oklch(
      var(--pagination-primary-hover-lightness)
        var(--pagination-primary-hover-chroma) var(--pagination-primary-hue)
    );
    --pagination-current-lightness: 45%;
    --pagination-current-chroma: 0.5;
    --pagination-current-color: oklch(
      var(--pagination-current-lightness) var(--pagination-current-chroma)
        var(--pagination-primary-hue)
    );
    --pagination-disabled-lightness: 55%;
    --pagination-disabled-color: oklch(
      var(--pagination-disabled-lightness) 0 0deg
    );
    --pagination-ellipsis-lightness: 50%;
    --pagination-ellipsis-chroma: 0.1;
    --pagination-ellipsis-color: oklch(
      var(--pagination-ellipsis-lightness) var(--pagination-ellipsis-chroma)
        var(--pagination-primary-hue)
    );

    /* モバイルファースト スペーシング（320px基準） */
    --pagination-spacing-xs: 0.375rem; /* 6px */
    --pagination-spacing-sm: 0.5rem; /* 8px */
    --pagination-spacing-md: 0.75rem; /* 12px */
    --pagination-spacing-lg: 1rem; /* 16px */
    --pagination-spacing-xl: 1.5rem; /* 24px */

    /* モバイルファースト フォントサイズ */
    --pagination-font-size-sm: 0.875rem; /* 14px */
    --pagination-font-size-md: 0.9rem; /* 14.4px */
    --pagination-font-size-lg: 0.95rem; /* 15.2px */
    --pagination-font-size-xl: 1rem; /* 16px */

    /* モバイルファースト サイズ */
    --pagination-size-sm: 32px;
    --pagination-size-md: 40px;
    --pagination-size-lg: 48px;
    --pagination-size-touch: 56px;

    /* モバイルファースト ボーダー半径 */
    --pagination-radius-sm: 0.75rem; /* 12px */
    --pagination-radius-md: 1rem; /* 16px */

    /* トランジション */
    --pagination-transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    --pagination-transition-slow: width 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* ===== ベーススタイル（モバイルファースト） ===== */
  .pagination-container {
    max-width: 100%;
    margin: var(--pagination-spacing-xl) 0;
    padding: var(--pagination-spacing-lg) 0.5rem;
    border-radius: var(--pagination-radius-md);
    contain: layout style paint;
    transform: translateZ(0);

    /* ページ情報エリア */
    .pagination-info {
      margin-top: var(--pagination-spacing-lg);
      text-align: center;

      /* プログレスバー */
      .pagination-progress {
        position: relative;
        overflow: hidden;
        width: 100%;
        height: 0.375rem;
        border-radius: 0.1875rem;
        background: oklch(88% 0.08 var(--pagination-primary-hue) / 0.4);
        box-shadow: inset 0 1px 2px oklch(0% 0 0deg / 0.1);
      }
    }
  }

  @keyframes shimmer {
    0% {
      transform: translateX(-100%);
    }

    100% {
      transform: translateX(100%);
    }
  }

  /* プログレスバーのスタイル */
  .pagination-progress-bar {
    position: relative;
    height: 100%;
    border-radius: 0.1875rem;
    background: linear-gradient(
      90deg,
      oklch(50% 0.4 var(--pagination-primary-hue)) 0%,
      oklch(45% 0.5 300deg) 50%,
      oklch(40% 0.6 320deg) 100%
    );
    transition: var(--pagination-transition-slow);
    box-shadow: 0 1px 3px oklch(0% 0 0deg / 0.2);
  }

  /* プログレスバーのシャイマー効果 */
  .pagination-progress-bar::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(
      90deg,
      transparent 0%,
      oklch(100% 0 0deg / 0.3) 50%,
      transparent 100%
    );
    animation: shimmer 2s infinite;
  }

  /* ===== レイアウト（モバイルファースト） ===== */
  .pagination-controls {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--pagination-spacing-md);

    /* ページ番号エリア */
    .pagination-numbers {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      align-items: center;
      gap: var(--pagination-spacing-xs);
      order: 1;
    }

    /* ナビゲーションボタンエリア */
    .pagination-nav-buttons {
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: var(--pagination-spacing-sm);
      order: 2;
      width: 100%;
    }
  }

  /* ===== ボタンとナンバーの共通スタイル ===== */
  .pagination-btn,
  .pagination-number {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: var(--pagination-spacing-sm) var(--pagination-spacing-md);
    border-radius: var(--pagination-radius-sm);
    color: var(--pagination-primary-color);
    font-size: var(--pagination-font-size-md);
    font-weight: 700;
    line-height: 1.2;
    text-decoration: none;
    letter-spacing: 0.025em;
    cursor: pointer;
    transition: var(--pagination-transition);
    contain: layout style paint;
  }

  /* ===== 状態別スタイル ===== */
  .pagination-number {
    min-width: var(--pagination-size-md);
    min-height: var(--pagination-size-md);
    font-size: var(--pagination-font-size-lg);

    &:hover {
      color: var(--pagination-primary-hover-color);
      transform: translateY(-0.1875rem) scale(1.08);
      box-shadow: 0 0.5rem 1.5625rem oklch(0% 0 0deg / 0.15);
    }

    &:focus {
      outline: none;
      box-shadow: 0 0 0 0.25rem oklch(60% 0 0deg / 0.4);
      transform: translateY(-0.125rem) scale(1.05);
    }

    /* 現在のページ */
    &.pagination-current {
      background: linear-gradient(
        135deg,
        oklch(45% 0.5 var(--pagination-primary-hue)) 0%,
        oklch(40% 0.6 300deg) 50%,
        oklch(35% 0.7 320deg) 100%
      );
      color: oklch(100% 0 0deg);
      font-weight: 800;
      cursor: default;
      transform: scale(1.05);
      box-shadow: 0 0.25rem 0.75rem oklch(0% 0 0deg / 0.2);

      &:hover {
        transform: scale(1.05);
        box-shadow: 0 0.25rem 0.9375rem oklch(0% 0 0deg / 0.3);
      }
    }

    /* 省略記号 */
    &.pagination-ellipsis {
      color: var(--pagination-ellipsis-color);
      font-weight: 500;
    }
  }

  .pagination-btn {
    min-width: var(--pagination-size-lg);
    min-height: var(--pagination-size-lg);

    /* モバイルでのナビゲーションボタンの幅調整 */
    .pagination-nav-buttons & {
      flex: 1;
      min-width: 0;
      max-width: none;
    }

    &:focus {
      outline: none;
      box-shadow: 0 0 0 0.25rem oklch(60% 0 0deg / 0.4);
    }

    /* ナビゲーションボタンのホバーアニメーションを削除 */
    &:hover:not(.pagination-disabled) {
      color: var(--pagination-primary-hover-color);
    }

    /* 無効状態 */
    &.pagination-disabled {
      border: 1px solid oklch(85% 0 0deg / 0.3);
      background: oklch(92% 0 0deg / 0.3);
      color: var(--pagination-disabled-color);
      opacity: 0.7;
      cursor: not-allowed;
      transform: none;
      box-shadow: inset 0 1px 2px oklch(0% 0 0deg / 0.1);

      &:hover {
        transform: none;
        box-shadow: none;
      }
    }
  }

  /* 省略記号ドット */
  .pagination-ellipsis-dots {
    display: flex;
    justify-content: center;
    align-items: center;
    min-width: var(--pagination-size-sm);
    min-height: var(--pagination-size-sm);
    padding: 0 var(--pagination-spacing-xs);
    color: oklch(50% 0.15 var(--pagination-primary-hue));
    font-size: var(--pagination-font-size-xl);
    font-weight: 800;
    letter-spacing: 0.1em;
  }

  /* アイコンとテキスト */
  .pagination-icon {
    width: clamp(1rem, 3vw, 1.25rem);
    height: clamp(1rem, 3vw, 1.25rem);
    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .pagination-btn-text {
    margin: 0 var(--pagination-spacing-xs);
    font-size: var(--pagination-font-size-sm);
    font-weight: 700;
    letter-spacing: 0.025em;
  }

  /* タブレット以上でのボタンスタイル */
  @media (min-width: 48rem) {
    .pagination-nav-buttons .pagination-btn {
      flex: none;
      width: auto;
      min-width: var(--pagination-size-lg);
      padding: var(--pagination-spacing-sm) var(--pagination-spacing-lg);
    }

    .pagination-prev {
      order: 1;
    }

    .pagination-next {
      order: 3;
    }
  }

  /* ===== レスポンシブデザイン（モバイルファースト） ===== */

  /* タブレット（768px以上） */
  @media (min-width: 48rem) {
    :root {
      --pagination-spacing-xs: 0.5rem; /* 8px */
      --pagination-spacing-sm: 0.625rem; /* 10px */
      --pagination-spacing-md: 1rem; /* 16px */
      --pagination-spacing-lg: 1.25rem; /* 20px */
      --pagination-spacing-xl: 2rem; /* 32px */
      --pagination-font-size-sm: 0.9rem; /* 14.4px */
      --pagination-font-size-md: 0.95rem; /* 15.2px */
      --pagination-font-size-lg: 1rem; /* 16px */
      --pagination-font-size-xl: 1.1rem; /* 17.6px */
      --pagination-size-sm: 36px;
      --pagination-size-md: 44px;
      --pagination-size-lg: 52px;
      --pagination-size-touch: 60px;
      --pagination-radius-sm: 0.875rem; /* 14px */
      --pagination-radius-md: 1.25rem; /* 20px */
    }

    .pagination-container {
      max-width: 100%;
      margin: var(--pagination-spacing-xl) 0;
      padding: var(--pagination-spacing-xl) 1rem;

      .pagination-controls {
        flex-direction: row;
        justify-content: center;
        align-items: center;
        gap: var(--pagination-spacing-lg);

        .pagination-numbers {
          order: 2;
          flex: 0 0 auto;
        }

        .pagination-nav-buttons {
          display: contents;
        }
      }
    }
  }

  /* デスクトップ（1280px以上） */
  @media (min-width: 80rem) {
    :root {
      --pagination-spacing-xs: 0.625rem; /* 10px */
      --pagination-spacing-sm: 0.75rem; /* 12px */
      --pagination-spacing-md: 1.25rem; /* 20px */
      --pagination-spacing-lg: 1.5rem; /* 24px */
      --pagination-spacing-xl: 2.5rem; /* 40px */
      --pagination-font-size-sm: 0.95rem; /* 15.2px */
      --pagination-font-size-md: 1rem; /* 16px */
      --pagination-font-size-lg: 1.05rem; /* 16.8px */
      --pagination-font-size-xl: 1.125rem; /* 18px */
      --pagination-size-sm: 40px;
      --pagination-size-md: 48px;
      --pagination-size-lg: 56px;
      --pagination-size-touch: 64px;
      --pagination-radius-sm: 1rem; /* 16px */
      --pagination-radius-md: 1.5rem; /* 24px */
    }

    .pagination-container {
      max-width: 100%;
      margin: var(--pagination-spacing-xl) 0;
      padding: 2.5rem 1.5rem;

      .pagination-controls {
        gap: 2rem;

        .pagination-numbers {
          gap: var(--pagination-spacing-sm);
        }
      }
    }
  }

  /* ===== アクセシビリティ対応（モバイルファースト） ===== */
  @media (hover: none) and (pointer: coarse) {
    .pagination-btn,
    .pagination-number {
      min-width: var(--pagination-size-touch);
      min-height: var(--pagination-size-touch);
      font-size: var(--pagination-font-size-lg);

      &:active {
        transform: scale(0.92);
      }

      &:hover {
        transform: none;
      }
    }
  }

  @media (prefers-contrast: high) {
    .pagination-container {
      border: 2px solid oklch(0% 0 0deg);
      background: oklch(100% 0 0deg);
    }

    .pagination-btn,
    .pagination-number {
      border: 2px solid oklch(0% 0 0deg);
      background: oklch(100% 0 0deg);
      color: oklch(0% 0 0deg);

      &:hover {
        background: oklch(0% 0 0deg);
        color: oklch(100% 0 0deg);
      }
    }

    .pagination-number.pagination-current {
      background: oklch(0% 0 0deg);
      color: oklch(100% 0 0deg);
    }

    .pagination-btn.pagination-disabled {
      background: oklch(90% 0 0deg);
      color: oklch(50% 0 0deg);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .pagination-btn,
    .pagination-number,
    .pagination-progress-bar,
    .pagination-icon {
      transition: none;

      &:hover {
        transform: none;
      }
    }

    .pagination-progress-bar::after {
      animation: none;
    }
  }

  /* ===== ダークモード対応 ===== */
  @media (prefers-color-scheme: dark) {
    :root {
      --pagination-primary-lightness: 80%;
      --pagination-primary-chroma: 0.15;
      --pagination-primary-hover-lightness: 95%;
      --pagination-primary-hover-chroma: 0.2;
      --pagination-ellipsis-lightness: 70%;
      --pagination-ellipsis-chroma: 0.1;
    }

    .pagination-container .pagination-info .pagination-progress {
      background: oklch(20% 0.05 var(--pagination-primary-hue) / 0.4);
    }

    .pagination-btn.pagination-disabled {
      background: oklch(15% 0 0deg / 0.3);
      color: oklch(50% 0 0deg);
    }
  }
</style>
