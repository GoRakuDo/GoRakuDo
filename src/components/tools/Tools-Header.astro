---
// ========== ENHANCED TOOLS HEADER SECTION ==========
// ToolsHeaderSection.astro - ツールヘッダーセクションコンポーネント
// Astroネイティブアプローチでモダンなデザインを実装

// ========== INLINE TYPE DEFINITIONS ==========
export interface Tool {
  readonly id: string;
  readonly name: string;
  readonly description: string;
  readonly iconUrl: string;
  readonly color?: string;
  readonly link: string;
  readonly interactiveElements?: {
    hasHoverEffect?: boolean;
    hasClickAction?: boolean;
    animationType?: 'scale' | 'slide' | 'fade';
  };
}

export interface Props {
  tools: Tool[];
}

// ========== CONSTANTS & CONFIGURATION ==========
const STATS_CONFIG = {
  tools: {
    label: 'Tools Terpilih',
    suffix: '+',
  },
  free: {
    label: 'Gratis',
    value: '100%',
  },
  access: {
    label: 'Akses',
    value: '24/7',
  },
} as const;

const TITLE_CONFIG = {
  main: 'Tools & Aplikasi',
  accent: 'Pembelajaran Bahasa Jepang',
} as const;

const DESCRIPTION =
  'Pilih tool yang sesuai dengan tahap pembelajaran dan kebutuhan Anda. Setiap tool telah dipilih berdasarkan efektivitas dan kemudahan penggunaan.';

// ========== UTILITY FUNCTIONS ==========
const getToolsCount = (tools: Tool[]): number => tools.length;

const getStatsData = (toolsCount: number) => [
  {
    number: `${toolsCount}${STATS_CONFIG.tools.suffix}`,
    label: STATS_CONFIG.tools.label,
  },
  {
    number: STATS_CONFIG.free.value,
    label: STATS_CONFIG.free.label,
  },
  {
    number: STATS_CONFIG.access.value,
    label: STATS_CONFIG.access.label,
  },
];

// ========== OPTIMIZED DATA PROCESSING ==========
const { tools } = Astro.props;

// メイン処理 - 一度だけ計算
const toolsCount = getToolsCount(tools);
const statsData = getStatsData(toolsCount);
---

<section
  class='tools-header-section'
  aria-labelledby='tools-header-title'
  role='banner'
  transition:name='tools-header'
  itemscope
  itemtype='https://schema.org/WebPageElement'
>
  <div class='tools-header-container'>
    <!-- Background Elements -->
    <div
      class='tools-header-bg glassmorphism glassmorphism-card'
      aria-hidden='true'
    >
    </div>

    <!-- Main Content -->
    <div class='tools-header-content'>
      <header class='tools-header-main'>
        <h2
          class='tools-header-title'
          id='tools-header-title'
          itemprop='headline'
        >
          <span class='tools-title-main'>{TITLE_CONFIG.main}</span>
          <span class='tools-title-accent'>{TITLE_CONFIG.accent}</span>
        </h2>

        <p class='tools-header-description' itemprop='description'>
          {DESCRIPTION}
        </p>
      </header>

      <!-- Stats Section -->
      <div
        class='tools-header-stats'
        role='region'
        aria-label='Tools statistics'
      >
        {
          statsData.map((stat, index) => (
            <>
              <div
                class='tools-stat-item'
                itemprop='mainEntity'
                itemscope
                itemtype='https://schema.org/QuantitativeValue'
              >
                <span class='tools-stat-number' itemprop='value'>
                  {stat.number}
                </span>
                <span class='tools-stat-label' itemprop='name'>
                  {stat.label}
                </span>
              </div>
              {index < statsData.length - 1 && (
                <div class='tools-stat-divider' aria-hidden='true' />
              )}
            </>
          ))
        }
      </div>
    </div>
  </div>
</section>

<style>
  /* ========== CSS VARIABLES & DESIGN TOKENS ========== */
  .tools-header-section {
    /* Color Variables - OKLCHカラースペースで最適化 */
    --header-bg-primary: transparent;
    --header-text-primary: oklch(1 0 0); /* 純白 */
    --header-text-secondary: oklch(0.9 0 0 / 0.8); /* 明度90%の白、80%透明度 */
    --header-text-muted: oklch(0.85 0 0 / 0.7); /* 明度85%の白、70%透明度 */
    --header-border-subtle: oklch(0.95 0 0 / 0.1); /* 明度95%の白、10%透明度 */
    --header-border-divider: oklch(0.9 0 0 / 0.2); /* 明度90%の白、20%透明度 */

    /* Spacing Variables - tools-index.cssの変数と競合を避けるため独自変数を使用 */
    --header-padding-mobile: 4.5rem 0 1rem;
    --header-padding-tablet: 4rem 0 1rem;
    --header-padding-desktop: 5rem 0 2rem;
    --header-container-padding: 0 1rem;
    --header-content-padding: 1rem 0;

    /* Typography Variables - tools-index.cssの変数と競合を避けるため独自変数を使用 */
    --header-title-mobile: 2.5rem;
    --header-title-tablet: 3rem;
    --header-title-desktop: 3.5rem;
    --header-title-large: 4rem;
    --header-accent-mobile: 1.5rem;
    --header-accent-tablet: 1.75rem;
    --header-accent-desktop: 2rem;
    --header-accent-large: 2.25rem;
    --header-description-mobile: 1.125rem;
    --header-description-tablet: 1.25rem;
    --header-stat-number-mobile: 1.5rem;
    --header-stat-number-tablet: 1.75rem;
    --header-stat-number-desktop: 2rem;
    --header-stat-label: 0.875rem;

    /* Layout Variables - tools-index.cssの変数と競合を避けるため独自変数を使用 */
    --header-container-max-width: 1200px;
    --header-stats-gap-mobile: 2rem;
    --header-stats-gap-desktop: 3rem;
    --header-divider-height: 2rem;

    /* Animation Variables - tools-index.cssの変数と競合を避けるため独自変数を使用 */
    --header-transition-fast: 0.2s ease;
    --header-transition-normal: 0.3s ease;

    /* Apply base styles */
    position: relative;
    padding: var(--header-padding-mobile);
    overflow: hidden;
    background: var(--header-bg-primary);
  }

  .tools-header-container {
    position: relative;
    max-width: var(--header-container-max-width);
    margin: 0 auto;
    padding: var(--header-container-padding);
  }

  /* ========== BACKGROUND ELEMENTS ========== */
  .tools-header-bg {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    /* GlassMorphism効果はグローバルクラスで適用 */
  }

  /* ========== MOBILE OPTIMIZATIONS ========== */
  @media (max-width: 768px) {
    .tools-header-section {
      padding: var(--header-padding-mobile);
    }

    .tools-header-container {
      /* モバイル用の左右マージン追加 */
      max-width: none;
      margin: 0 0.5rem;
      padding: 0;
    }

    .tools-header-bg {
      /* モバイル用の背景最適化 */
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      /* グローバルGlassMorphismクラスを上書きしてモバイル用に調整 */
      border-radius: var(--border-radius-card, 1rem) !important;
      /* グローバルクラスのborderを保持しつつ、下のborderを強調 */
      border-bottom: 1px solid var(--header-border-subtle) !important;
      box-shadow:
        0 8px 32px rgba(0, 0, 0, 0.1),
        inset 0 -1px 0 var(--header-border-subtle) !important;
    }

    .tools-header-content {
      /* コンテンツのパディングを調整 - 左右にもパディングを追加 */
      padding: 1rem 1rem 1.5rem 1rem !important;
    }
  }

  /* ========== MAIN CONTENT ========== */
  .tools-header-content {
    position: relative;
    text-align: center;
    z-index: 1;
    padding: var(--header-content-padding);
  }

  .tools-header-main {
    margin-bottom: 3rem;
  }

  /* ========== TYPOGRAPHY ========== */
  .tools-header-title {
    margin: 0 0 1.5rem;
    font-size: var(--header-title-mobile);
    font-weight: 700;
    line-height: 1.2;
    color: var(--header-text-primary);
  }

  .tools-title-main {
    display: block;
    background: linear-gradient(
      135deg,
      var(--header-text-primary) 0%,
      oklch(0.9 0.02 240) 100% /* 明度90%、彩度2%、色相240度（青系） */
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .tools-title-accent {
    display: block;
    font-size: var(--header-accent-mobile);
    font-weight: 500;
    margin-top: 0.5rem;
    background: linear-gradient(
      135deg,
      oklch(0.65 0.25 280) 0%,
      /* 紫系 */ oklch(0.6 0.2 250) 50%,
      /* 青系 */ oklch(0.7 0.15 160) 100% /* 緑系 */
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* ========== DESCRIPTION ========== */
  .tools-header-description {
    max-width: 600px;
    margin: 0 auto;
    font-size: var(--header-description-mobile);
    line-height: 1.7;
    color: var(--header-text-secondary);
  }

  /* ========== STATS SECTION ========== */
  .tools-header-stats {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--header-stats-gap-mobile);
    flex-wrap: wrap;
  }

  .tools-stat-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.25rem;
    transition: transform var(--header-transition-fast);
  }

  .tools-stat-item:hover {
    transform: translateY(-2px);
  }

  .tools-stat-number {
    font-size: var(--header-stat-number-mobile);
    font-weight: 700;
    color: var(--header-text-primary);
    line-height: 1;
  }

  .tools-stat-label {
    font-size: var(--header-stat-label);
    color: var(--header-text-muted);
    font-weight: 500;
  }

  .tools-stat-divider {
    width: 1px;
    height: var(--header-divider-height);
    background: var(--header-border-divider);
  }

  /* ========== RESPONSIVE DESIGN ========== */
  @media (min-width: 640px) {
    .tools-header-section {
      padding: var(--header-padding-tablet);
    }

    .tools-header-container {
      padding: 0 2rem;
    }

    .tools-header-content {
      padding: 1.25rem 0.75rem;
    }

    .tools-header-title {
      font-size: var(--header-title-tablet);
    }

    .tools-title-accent {
      font-size: var(--header-accent-tablet);
    }

    .tools-header-description {
      font-size: var(--header-description-tablet);
    }

    .tools-stat-number {
      font-size: var(--header-stat-number-tablet);
    }
  }

  @media (min-width: 768px) {
    .tools-header-section {
      padding: var(--header-padding-desktop);
    }

    .tools-header-content {
      padding: 1.5rem 1rem;
    }

    .tools-header-title {
      font-size: var(--header-title-desktop);
    }

    .tools-title-accent {
      font-size: var(--header-accent-desktop);
    }

    .tools-header-stats {
      gap: var(--header-stats-gap-desktop);
    }

    .tools-stat-number {
      font-size: var(--header-stat-number-desktop);
    }
  }

  @media (min-width: 1024px) {
    .tools-header-content {
      padding: 1.75rem 1.25rem;
    }

    .tools-header-title {
      font-size: var(--header-title-large);
    }

    .tools-title-accent {
      font-size: var(--header-accent-large);
    }
  }

  @media (min-width: 1280px) {
    .tools-header-content {
      padding: 2rem 1.5rem;
    }
  }

  /* ========== ACCESSIBILITY & PERFORMANCE ========== */
  @media (prefers-contrast: high) {
    .tools-title-main {
      color: var(--header-text-primary);
      -webkit-text-fill-color: var(--header-text-primary);
    }

    .tools-title-accent {
      color: oklch(0.65 0.25 280); /* 高コントラスト用の紫 */
      -webkit-text-fill-color: oklch(0.65 0.25 280);
    }

    .tools-stat-number {
      color: var(--header-text-primary);
    }

    .tools-stat-label {
      color: var(--header-text-secondary);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .tools-header-section,
    .tools-stat-item {
      transition: none;
    }

    .tools-stat-item:hover {
      transform: none;
    }
  }

  /* Focus management */
  .tools-header-section:focus-visible {
    outline: 2px solid var(--header-text-primary);
    outline-offset: 2px;
  }

  /* Print styles */
  @media print {
    .tools-header-bg {
      display: none;
    }

    .tools-header-section {
      background: oklch(1 0 0); /* 純白 */
      color: oklch(0 0 0); /* 純黒 */
    }

    .tools-title-main,
    .tools-title-accent {
      color: oklch(0 0 0); /* 純黒 */
      -webkit-text-fill-color: oklch(0 0 0);
    }
  }
</style>

<!-- ========== CLIENT-SIDE OPTIMIZATION ========== -->
<script>
  // パフォーマンス最適化: 統計アニメーション
  function optimizeStatsAnimation() {
    const statsItems = document.querySelectorAll(
      '.tools-stat-item'
    ) as NodeListOf<HTMLElement>;

    if ('IntersectionObserver' in window) {
      const statsObserver = new IntersectionObserver(
        entries => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              const element = entry.target as HTMLElement;
              element.style.opacity = '1';
              element.style.transform = 'translateY(0)';
              statsObserver.unobserve(entry.target);
            }
          });
        },
        {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px',
        }
      );

      statsItems.forEach(item => {
        item.style.opacity = '0';
        item.style.transform = 'translateY(20px)';
        item.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        statsObserver.observe(item);
      });
    }
  }

  // DOM読み込み完了後に実行
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', optimizeStatsAnimation);
  } else {
    optimizeStatsAnimation();
  }
</script>
