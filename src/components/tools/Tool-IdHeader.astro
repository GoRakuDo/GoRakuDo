---
// ========== SIMPLIFIED HEADER COMPONENT ==========
// Centralized data management - this component only handles display logic
// All data processing is done in the parent index.astro

export interface Props {
  tool: string;
  articleCount: number;
  title: string;
  description: string;
  iconPath: string;
  formattedToolName: string;
  currentYear: number;
}

const {
  tool,
  articleCount,
  title,
  description,
  iconPath,
  formattedToolName,
  currentYear,
} = Astro.props;

// Constants for display
const ICON_DIMENSIONS = { width: 175, height: 175 };
const iconAlt = `${formattedToolName} tool icon`;

// Meta items for display
const META_ITEMS = [
  {
    icon: 'M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z',
    label:
      articleCount === 0
        ? 'No Articles'
        : articleCount === 1
          ? '1 Article'
          : `${articleCount} Articles`,
  },
  {
    icon: 'M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z',
    label: 'Free Resources',
  },
] as const;
---

<!-- ========== ENHANCED HEADER COMPONENT ========== -->
<header
  class='component-header'
  role='banner'
  itemscope
  itemtype='https://schema.org/WebPageElement'
>
  <div class='header-container'>
    <!-- Background Elements -->
    <div class='header-bg glassmorphism glassmorphism-card' aria-hidden='true'>
    </div>

    <!-- Integrated Content Section with Icon and Text -->
    <div class='header-content-section'>
      <!-- Icon Container -->
      <div class='tool-icon-container'>
        <img
          src={iconPath}
          alt={iconAlt}
          class='tool-icon-large'
          loading='eager'
          width={ICON_DIMENSIONS.width}
          height={ICON_DIMENSIONS.height}
          itemprop='image'
        />
      </div>

      <!-- Text Content -->
      <div class='header-text-content'>
        <h1 class='header-title' itemprop='headline'>
          {title}
        </h1>
        <p class='header-description' itemprop='description'>
          {description}
        </p>
        <div class='header-meta' role='list' aria-label='Tool statistics'>
          {
            META_ITEMS.map((item, index) => (
              <span class='meta-item' role='listitem'>
                <svg
                  class='meta-icon'
                  fill='none'
                  stroke='currentColor'
                  viewBox='0 0 24 24'
                  aria-hidden='true'
                >
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d={item.icon}
                  />
                </svg>
                {item.label}
              </span>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</header>

<style is:global>
  /* ========== ENHANCED ICON STYLES ========== */
  .tool-icon-large {
    width: clamp(100px, 12.5vw, 170px);
    height: clamp(100px, 12.5vw, 170px);
    margin: 0;
    border: none;
    border-radius: 16px;
    background: transparent;
    transition:
      transform var(--transition-normal),
      box-shadow var(--transition-normal);
    object-fit: contain;
    filter: drop-shadow(0 4px 8px oklch(0% 0 0deg / 0.3));
  }

  .tool-icon-large:hover {
    border: none;
    background: transparent;
    filter: drop-shadow(0 6px 12px oklch(0% 0 0deg / 0.4));
    transform: scale(1.05) translateY(-2px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* 画像読み込み最適化 */
  .tool-icon-large[loading='eager'] {
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .tool-icon-large[loading='eager'].loaded {
    opacity: 1;
  }

  /* ========== ENHANCED RESPONSIVE DESIGN ========== */

  /* Mobile First - Base Styles (320px+) */
  .header-content-section {
    position: relative;
    z-index: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: clamp(1rem, 2vw, 1.5rem);
    width: 100%;
  }

  .header-content-section .tool-icon-container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: clamp(100px, 12.5vw, 170px);
    height: clamp(100px, 12.5vw, 170px);
    border: none;
    border-radius: 16px;
    background: transparent;
    text-align: center;
    flex-shrink: 0;
    cursor: pointer;
    filter: drop-shadow(0 4px 8px oklch(0% 0 0deg / 0.3));
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .tool-icon-container:hover {
    transform: scale(1.02) translateY(-1px);
    filter: drop-shadow(0 6px 12px oklch(0% 0 0deg / 0.4));
  }

  /* より詳細度の高いセレクターで確実に適用 */
  .component-header .header-content-section .tool-icon-container {
    width: clamp(100px, 12.5vw, 170px);
    height: clamp(100px, 12.5vw, 170px);
    border: none;
    border-radius: 16px;
    background: transparent;
    cursor: pointer;
    filter: drop-shadow(0 4px 8px oklch(0% 0 0deg / 0.3));
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* デスクトップ用の詳細度の高いセレクター */
  @media (min-width: 768px) {
    .tool-icon-container:hover {
      transform: scale(1.02) translateY(-1px);
      filter: drop-shadow(0 6px 12px oklch(0% 0 0deg / 0.4));
    }

    .component-header .header-content-section .tool-icon-container {
      width: clamp(85px, 8.5vw, 145px);
      height: clamp(85px, 8.5vw, 145px);
      border-radius: 16px;
      cursor: pointer;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
  }

  .header-text-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 100%;
    text-align: center;
  }

  .header-title {
    margin: 0 0 var(--spacing-md) 0;
    color: var(--clr-text-primary);
    font-size: clamp(var(--font-size-2xl), 4vw, var(--font-size-5xl));
    font-weight: 800;
    line-height: 1.2;
  }

  .header-description {
    margin: 0 0 var(--spacing-lg) 0;
    color: var(--clr-text-secondary);
    font-size: clamp(var(--font-size-base), 2vw, var(--font-size-xl));
    line-height: 1.6;
  }

  .header-meta {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: var(--spacing-lg);
  }

  .meta-item {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--spacing-sm);
    color: var(--clr-text-muted);
    font-size: var(--font-size-base);
    font-weight: 500;
  }

  .meta-icon {
    width: var(--spacing-md);
    height: var(--spacing-md);
    color: var(--clr-primary);
  }

  /* Tablet Breakpoint (640px+) */
  @media (min-width: 640px) {
    .header-content-section {
      flex-direction: row;
      justify-content: center;
      align-items: center;
      gap: clamp(1.5rem, 3vw, 2rem);
    }

    .header-text-content {
      flex: 1;
      justify-content: center;
      text-align: left;
    }

    .header-meta {
      justify-content: flex-start;
    }
  }

  /* Desktop Breakpoint (768px+) */
  @media (min-width: 768px) {
    .header-content-section {
      gap: clamp(2rem, 4vw, 2.5rem);
    }

    .header-content-section .tool-icon-container {
      width: clamp(85px, 8.5vw, 145px);
      height: clamp(85px, 8.5vw, 145px);
    }

    .tool-icon-large {
      width: clamp(85px, 8.5vw, 145px);
      height: clamp(85px, 8.5vw, 145px);
      border-radius: 16px;
    }

    .header-title {
      font-size: clamp(var(--font-size-4xl), 5vw, var(--font-size-6xl));
    }
  }

  /* Large Desktop Breakpoint (1024px+) */
  @media (min-width: 1024px) {
    .header-content-section {
      gap: clamp(2.5rem, 5vw, 3rem);
    }
  }

  /* Container Layout Adjustments */
  .header-container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    width: 100%;
    padding: 2rem 1rem;
    border-radius: var(--border-radius-card);
    text-align: center;
  }

  /* Background Elements */
  .header-bg {
    position: absolute;
    inset: 0;
    z-index: -1;

    /* GlassMorphism効果はグローバルクラスで適用 */
  }

  /* Content Section Positioning - styles moved to main selector above */

  /* ========== ACCESSIBILITY ENHANCEMENTS ========== */
  @media (prefers-reduced-motion: reduce) {
    .tool-icon-large {
      transition: none;
    }

    .tool-icon-large:hover {
      transform: none;
    }
  }

  @media (prefers-contrast: high) {
    .tool-icon-large {
      border-width: 2px;
    }

    .header-title {
      color: var(--clr-text-primary);
    }

    .header-description {
      color: var(--clr-text-secondary);
    }
  }

  /* Focus management */
  .tool-icon-large:focus-visible {
    outline: 2px solid var(--clr-primary);
    outline-offset: 2px;
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .header-bg {
      display: none;
    }
  }
</style>

<!-- ========== CLIENT-SIDE OPTIMIZATION ========== -->
<script>
  // アイコン読み込み最適化
  function optimizeIconLoading() {
    const icons = document.querySelectorAll(
      '.tool-icon-large[loading="eager"]'
    );

    icons.forEach(icon => {
      icon.addEventListener('load', () => {
        icon.classList.add('loaded');
      });

      // 既に読み込まれている場合の処理
      if ((icon as HTMLImageElement).complete) {
        icon.classList.add('loaded');
      }
    });
  }

  // DOM読み込み完了後に実行
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', optimizeIconLoading);
  } else {
    optimizeIconLoading();
  }
</script>
