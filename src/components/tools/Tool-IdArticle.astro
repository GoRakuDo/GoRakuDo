---
// ========== OPTIMIZED ARTICLE COMPONENT ==========
// Centralized data management - this component only handles display logic
// All data processing is done in the parent index.astro

interface Props {
  article: {
    slug: string;
    title: string;
    description: string;
    tags: string[];
    publishedDate: string;
    image: string | null;
    hasImage: boolean;
    originalArticle: any;
    index: number;
    isDirectToolArticle?: boolean;
    isRelatedToolArticle?: boolean;
    articleType?: 'direct' | 'related';
  };
  tool: string;
  index: number;
  role?:
    | 'gridcell'
    | 'listitem'
    | 'article'
    | 'button'
    | 'link'
    | 'tab'
    | 'tabpanel'
    | 'menuitem'
    | 'option'
    | 'treeitem'
    | 'grid'
    | 'listbox'
    | 'menu'
    | 'menubar'
    | 'tablist'
    | 'tree'
    | 'treegrid'
    | 'application'
    | 'banner'
    | 'complementary'
    | 'contentinfo'
    | 'form'
    | 'main'
    | 'navigation'
    | 'region'
    | 'search'
    | 'alert'
    | 'alertdialog'
    | 'dialog'
    | 'log'
    | 'marquee'
    | 'status'
    | 'timer'
    | 'tooltip'
    | 'presentation'
    | 'none';
  'aria-label'?: string;
}

const { article, tool, index, role, 'aria-label': ariaLabel } = Astro.props;

// Optimized constants for display
const IMAGE_DIMENSIONS = { width: 280, height: 160 };
const formatToolName = (tool: string): string =>
  tool.charAt(0).toUpperCase() + tool.slice(1);

// Optimized accessibility constants
const CARD_ACCESSIBILITY = {
  articleTypeLabels: {
    related: 'Artikel tool terkait',
  },
  actionLabels: {
    readArticle: (title: string) => `Read article: ${title}`,
  },
} as const;
---

<!-- ========== OPTIMIZED ARTICLE CARD MARKUP ========== -->
<article
  class='article-card-optimized glassmorphism glassmorphism-card'
  data-index={index}
  data-tool={tool}
  role={role}
  aria-label={ariaLabel}
  itemscope
  itemtype='https://schema.org/Article'
>
  <a
    href={`/tools/${tool}/${article.slug}`}
    class='card-link'
    aria-label={CARD_ACCESSIBILITY.actionLabels.readArticle(article.title)}
    itemprop='url'
    tabindex='0'
  >
    <!-- カードヘッダー -->
    <header class='card-header'>
      <div class='card-header-top'>
        <time
          class='card-date'
          datetime={article.originalArticle.data.publishedDate ||
            new Date().toISOString()}
          itemprop='datePublished'
        >
          {article.publishedDate}
        </time>

        <!-- 記事タイプ表示 -->
        {
          article.articleType === 'related' && (
            <span
              class='article-type-badge related-article-badge'
              title={CARD_ACCESSIBILITY.articleTypeLabels.related}
              aria-label={CARD_ACCESSIBILITY.articleTypeLabels.related}
            >
              <svg class='w-3 h-3' fill='currentColor' viewBox='0 0 20 20'>
                <path
                  fill-rule='evenodd'
                  d='M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z'
                  clip-rule='evenodd'
                />
              </svg>
              Artikel Terkait
            </span>
          )
        }
      </div>

      <!-- アクションインジケーター -->
      <div class='card-action-indicator' aria-hidden='true'>
        <svg
          class='arrow-icon'
          xmlns='http://www.w3.org/2000/svg'
          width='24'
          height='24'
          viewBox='0 0 24 24'
          fill='none'
          stroke='currentColor'
          stroke-width='2'
          stroke-linecap='round'
          stroke-linejoin='round'
          aria-hidden='true'
        >
          <path d='M5 12h14'></path>
          <path d='m12 5 7 7-7 7'></path>
        </svg>
      </div>
    </header>

    <!-- メインコンテンツ -->
    <div class='card-content'>
      {
        article.hasImage && (
          <div class='card-image-section'>
            <img
              src={article.image}
              alt={`${article.title} - ${formatToolName(tool)} guide`}
              class='card-image'
              loading='lazy'
              decoding='async'
              width={IMAGE_DIMENSIONS.width}
              height={IMAGE_DIMENSIONS.height}
              itemprop='image'
            />
          </div>
        )
      }

      <div class='card-text-content'>
        <h3 class='card-title' itemprop='headline'>{article.title}</h3>
        <p class='card-description' itemprop='description'>
          {article.description}
        </p>
      </div>
    </div>

    <!-- フッター -->
    <footer class='card-footer'>
      <div class='card-tags' role='list' aria-label='Article tags'>
        {
          article.tags.map((tag: string) => (
            <span class='card-tag' role='listitem' itemprop='keywords'>
              #{tag}
            </span>
          ))
        }
      </div>
    </footer>
  </a>
</article>

<style is:global>
  /* ========== MODERN COMPACT ARTICLE CARD STYLES ========== */
  .article-card-optimized {
    position: relative;
    overflow: hidden;
    height: fit-content;
    margin: 0;
    padding: 0;
    border: 1px solid oklch(100% 0 0deg / 0.08);
    border-radius: 16px;
    background: linear-gradient(
      135deg,
      oklch(100% 0 0deg / 0.12) 0%,
      oklch(100% 0 0deg / 0.08) 100%
    );
    backdrop-filter: blur(24px) saturate(1.2);
    box-shadow:
      0 4px 20px oklch(0% 0 0deg / 0.08),
      0 1px 3px oklch(0% 0 0deg / 0.12),
      inset 0 1px 0 oklch(100% 0 0deg / 0.15);
    contain: layout style paint;
    will-change: transform, box-shadow;
    transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);

    /* Smooth Hover Lift Effect */
    &:hover {
      background: linear-gradient(
        135deg,
        oklch(100% 0 0deg / 0.2) 0%,
        oklch(100% 0 0deg / 0.15) 100%
      );
      transform: translateY(-8px) scale(1.01);
      border-color: color-mix(
        in oklch,
        var(--token-purple-base) 30%,
        transparent
      );
      box-shadow:
        0 20px 60px oklch(0% 0 0deg / 0.18),
        0 8px 25px oklch(0% 0 0deg / 0.12),
        0 2px 8px oklch(0% 0 0deg / 0.08),
        inset 0 1px 0 oklch(100% 0 0deg / 0.3),
        0 0 0 1px color-mix(in oklch, var(--token-purple-base) 20%, transparent);
    }

    /* Active State - Smooth Press Effect */
    &:active {
      transform: translateY(-4px) scale(1.005);
      transition-duration: 0.1s;
      box-shadow:
        0 10px 30px oklch(0% 0 0deg / 0.15),
        0 4px 15px oklch(0% 0 0deg / 0.1),
        0 1px 4px oklch(0% 0 0deg / 0.06),
        inset 0 1px 0 oklch(100% 0 0deg / 0.25);
    }

    /* Focus State */
    &:focus-within {
      outline: 2px solid var(--token-purple-base);
      outline-offset: 2px;
    }

    /* High Contrast Support */
    @media (prefers-contrast: high) {
      border-color: var(--clr-text-primary);
      background: var(--clr-background);
      box-shadow: 0 2px 8px oklch(0% 0 0deg / 0.3);
    }

    /* Dark Mode Optimization */
    @media (prefers-color-scheme: dark) {
      background: linear-gradient(
        135deg,
        oklch(20% 0 0deg / 0.15) 0%,
        oklch(15% 0 0deg / 0.1) 100%
      );
      border-color: oklch(100% 0 0deg / 0.12);

      &:hover {
        background: linear-gradient(
          135deg,
          oklch(25% 0 0deg / 0.2) 0%,
          oklch(20% 0 0deg / 0.15) 100%
        );
      }
    }
  }

  /* Reduce layout thrashing */
  .article-card-optimized .card-meta {
    contain: layout;
  }

  /* ========== MODERN COMPACT CARD LINK ========== */
  .card-link {
    position: relative;
    z-index: var(--z-Tool-IdArticle-card-link);
    display: flex;
    flex-direction: column;
    overflow: hidden;
    height: 100%;
    border-radius: inherit;
    color: inherit;
    text-decoration: none;
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    isolation: isolate;

    /* Modern Focus Management */
    &:focus-visible {
      position: relative;
      z-index: var(--z-Tool-IdArticle-card-link-focus-visible);
      outline: 2px solid var(--token-purple-base);
      outline-offset: 3px;
      border-radius: 16px;
      will-change: outline;
      transition: outline 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      box-shadow: 0 0 0 1px
        color-mix(in oklch, var(--token-purple-base) 20%, transparent);
    }

    /* Enhanced Hover State */
    &:hover {
      color: inherit;
      text-decoration: none;
      transform: translateZ(0);
    }

    /* Active State */
    &:active {
      color: inherit;
      text-decoration: none;
      transform: translateZ(0) scale(0.98);
      transition-duration: 0.1s;
    }

    /* High Contrast Support */
    @media (prefers-contrast: high) {
      &:focus-visible {
        outline-color: var(--clr-text-primary);
        outline-width: 3px;
        box-shadow: none;
      }
    }

    /* Dark Mode Optimization */
    @media (prefers-color-scheme: dark) {
      &:focus-visible {
        outline-color: color-mix(in oklch, var(--token-purple-base) 80%, white);
        box-shadow: 0 0 0 1px
          color-mix(in oklch, var(--token-purple-base) 30%, transparent);
      }
    }
  }

  /* ========== MODERN COMPACT CARD HEADER ========== */
  .card-header {
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: clamp(0.5rem, 1.5vw, 1rem);
    padding: clamp(0.5rem, 1.25vw, 0.75rem);
    flex-shrink: 0;
    border-bottom: 1px solid oklch(100% 0 0deg / 0.06);
    background: linear-gradient(
      135deg,
      oklch(100% 0 0deg / 0.08) 0%,
      oklch(100% 0 0deg / 0.04) 100%
    );
    backdrop-filter: blur(12px) saturate(1.1);
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);

    /* スマホ画面で上下左右パディングを2倍に */
    @media (max-width: 767px) {
      padding: clamp(1rem, 2.5vw, 1.5rem);
    }

    /* タブレット以上でパディング調整（統一） */
    @media (min-width: 768px) {
      padding: 1rem;
    }

    /* Modern Hover Enhancement */
    .card-link:hover & {
      background: linear-gradient(
        135deg,
        oklch(100% 0 0deg / 0.12) 0%,
        oklch(100% 0 0deg / 0.08) 100%
      );
      border-bottom-color: color-mix(
        in oklch,
        var(--token-purple-base) 15%,
        transparent
      );
    }

    /* Dark Mode Optimization */
    @media (prefers-color-scheme: dark) {
      background: linear-gradient(
        135deg,
        oklch(20% 0 0deg / 0.1) 0%,
        oklch(15% 0 0deg / 0.06) 100%
      );
      border-bottom-color: oklch(100% 0 0deg / 0.08);

      .card-link:hover & {
        background: linear-gradient(
          135deg,
          oklch(25% 0 0deg / 0.15) 0%,
          oklch(20% 0 0deg / 0.1) 100%
        );
      }
    }
  }

  .card-date {
    color: var(--clr-text-muted);
    font-size: clamp(0.75rem, 1.5vw, 0.875rem);
    font-weight: 500;
    opacity: 0.8;
  }

  /* ========== メインコンテンツ (MOBILE PADDING OPTIMIZED) ========== */
  .card-content {
    display: flex;
    flex: 1;
    flex-direction: column;
    min-height: 0; /* Prevents flex item from overflowing */
    padding: clamp(0.5rem, 1.25vw, 0.75rem);
    background: transparent;

    /* スマホ画面で上下左右パディングを2倍に */
    @media (max-width: 767px) {
      padding: clamp(1rem, 2.5vw, 1.5rem);
    }

    /* タブレット以上でパディング調整（統一） */
    @media (min-width: 768px) {
      padding: 1rem;
    }
  }

  .card-image-section {
    overflow: hidden;
    margin-bottom: clamp(0.5rem, 1.25vw, 0.75rem);
    border-radius: clamp(8px, 1.5vw, 12px);
    background: oklch(100% 0 0deg / var(--opacity-05));
  }

  .card-image {
    width: 100%;
    height: clamp(120px, 18vh, 180px);
    border-radius: clamp(8px, 1.5vw, 12px);
    background: var(--clr-background);
    object-fit: cover;
    object-position: center;
    image-rendering: auto;
    transition: transform 0.5s cubic-bezier(0.23, 1, 0.32, 1);
    will-change: transform;

    /* Smooth Hover Effect */
    .card-link:hover & {
      transform: scale(1.03);
    }
  }

  /* 画像読み込み最適化 */
  .card-image[loading='lazy'] {
    opacity: 1;
  }

  /* ========== テキストコンテンツ (COMPACT DESIGN) ========== */
  .card-text-content {
    display: flex;
    flex: 1;
    flex-direction: column;
    gap: clamp(0.25rem, 0.75vw, 0.375rem);
    min-height: 0;
  }

  .card-title {
    display: -webkit-box;
    overflow: hidden;
    margin: 0;
    color: var(--clr-text-primary);
    font-size: clamp(1rem, 2.5vw, 1.25rem);
    font-weight: 700;
    line-height: 1.3;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    flex-shrink: 0;
    letter-spacing: -0.01em;
  }

  .card-description {
    display: -webkit-box;
    flex: 1;
    overflow: hidden;
    margin: 0;
    color: var(--clr-text-secondary);
    font-size: clamp(0.875rem, 2vw, 1rem);
    font-weight: 400;
    line-height: 1.6;
    opacity: 0.9;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
  }

  /* ========== MODERN COMPACT CARD FOOTER ========== */
  .card-footer {
    display: flex;
    flex-direction: column;
    margin-top: auto;
    padding: clamp(0.5rem, 1.25vw, 0.75rem);
    flex-shrink: 0;
    border-top: 1px solid oklch(100% 0 0deg / 0.06);
    background: linear-gradient(
      135deg,
      oklch(100% 0 0deg / 0.08) 0%,
      oklch(100% 0 0deg / 0.04) 100%
    );
    backdrop-filter: blur(12px) saturate(1.1);
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);

    /* スマホ画面で上下左右パディングを2倍に */
    @media (max-width: 767px) {
      padding: clamp(1rem, 2.5vw, 1.5rem);
    }

    /* タブレット以上でパディング調整（統一） */
    @media (min-width: 768px) {
      padding: 1rem;
    }

    /* Modern Hover Enhancement */
    .card-link:hover & {
      background: linear-gradient(
        135deg,
        oklch(100% 0 0deg / 0.12) 0%,
        oklch(100% 0 0deg / 0.08) 100%
      );
      border-top-color: color-mix(
        in oklch,
        var(--token-purple-base) 15%,
        transparent
      );
    }

    /* Dark Mode Optimization */
    @media (prefers-color-scheme: dark) {
      background: linear-gradient(
        135deg,
        oklch(20% 0 0deg / 0.1) 0%,
        oklch(15% 0 0deg / 0.06) 100%
      );
      border-top-color: oklch(100% 0 0deg / 0.08);

      .card-link:hover & {
        background: linear-gradient(
          135deg,
          oklch(25% 0 0deg / 0.15) 0%,
          oklch(20% 0 0deg / 0.1) 100%
        );
      }
    }
  }

  .card-tags {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: center;
    gap: clamp(0.25rem, 0.75vw, 0.375rem);
    overflow-x: auto;
    scrollbar-width: none;
    -ms-overflow-style: none;
    contain: layout;
  }

  .card-tags::-webkit-scrollbar {
    display: none;
  }

  .card-tag {
    flex-shrink: 0;
    padding: clamp(0.25rem, 1vw, 0.375rem) clamp(0.5rem, 1.5vw, 0.75rem);
    border: 1px solid
      color-mix(in oklch, var(--token-purple-base) 30%, transparent);
    border-radius: clamp(6px, 1vw, 8px);
    background: color-mix(in oklch, var(--token-purple-base) 10%, transparent);
    color: var(--token-purple-base);
    font-size: clamp(0.75rem, 1.5vw, 0.875rem);
    font-weight: 500;
    white-space: nowrap;
    transition: all 0.2s ease-in-out;

    /* ホバー効果 */
    &:hover {
      background: color-mix(
        in oklch,
        var(--token-purple-base) 20%,
        transparent
      );
      border-color: color-mix(
        in oklch,
        var(--token-purple-base) 50%,
        transparent
      );
    }

    /* モーション軽減対応 */
    @media (prefers-reduced-motion: reduce) {
      transition: none;
    }
  }

  /* ========== アクションインジケーター (REDESIGNED) ========== */
  .card-action-indicator {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: clamp(2rem, 4vw, 2.5rem);
    height: clamp(2rem, 4vw, 2.5rem);
    border: 1px solid
      color-mix(in oklch, var(--token-purple-base) 20%, transparent);
    border-radius: 50%;
    background: color-mix(in oklch, var(--token-purple-base) 15%, transparent);
    opacity: 1;
    transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1);
    flex-shrink: 0;
    backdrop-filter: blur(10px);

    /* Smooth Hover Effect */
    .card-link:hover & {
      background: color-mix(
        in oklch,
        var(--token-purple-base) 25%,
        transparent
      );
      border-color: color-mix(
        in oklch,
        var(--token-purple-base) 40%,
        transparent
      );
      transform: scale(1.15);
    }

    /* デスクトップ表示ではホバー時にのみ表示 */
    @media (min-width: 768px) {
      opacity: 0;
      transform: scale(0.8);

      .card-link:hover & {
        opacity: 1;
        transform: scale(1.1);
      }
    }
  }

  .arrow-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    width: clamp(0.875rem, 2vw, 1rem);
    height: clamp(0.875rem, 2vw, 1rem);
    color: var(--token-purple-base);
    transition: transform 0.5s cubic-bezier(0.23, 1, 0.32, 1);
    flex-shrink: 0;
    transform-origin: center;

    /* Smooth Hover Effect - 中央を基準としたアニメーション */
    .card-link:hover & {
      transform: scale(1.1) translateX(2px);
    }
  }

  /* ========== レスポンシブデザイン (REDESIGNED) ========== */

  /* モバイル (320px+) - デフォルト */

  /* タブレット (768px+) - コンパクトデザイン */
  @media (min-width: 768px) {
    .article-card-optimized {
      height: fit-content;
      min-height: auto;
      padding: 0;
    }
  }

  /* デスクトップ (1024px+) - コンパクトデザイン */
  @media (min-width: 1024px) {
    .article-card-optimized {
      /* より大きなホバー効果 */
      &:hover {
        transform: translateY(-6px);
        box-shadow:
          0 16px 48px oklch(0% 0 0deg / var(--opacity-20)),
          inset 0 1px 0 oklch(100% 0 0deg / var(--opacity-40));
      }
    }
  }
</style>
