---
// ========== OPTIMIZED TYPE DEFINITIONS ==========
interface ArticleData {
  title?: string;
  description?: string;
  tags?: string[];
  publishedDate?: string;
  image?: string;
  featuredImage?: string;
}

interface Article {
  slug?: string;
  id: string;
  data: ArticleData;
}

interface Props {
  article: Article;
  tool: string;
  index: number;
}

// ========== OPTIMIZED DATA PROCESSING ==========
const { article, tool, index } = Astro.props;

// ユーティリティ関数の最適化
const formatToolName = (tool: string) =>
  tool.charAt(0).toUpperCase() + tool.slice(1);
const formatDate = (date: string) => new Date(date).toLocaleDateString('id-ID');

// データ処理の最適化
const articleSlug = article.slug?.split('/').slice(1).join('/') || article.id;
const articleTitle =
  article.data.title || `Complete ${formatToolName(tool)} Guide`;
const articleDescription =
  article.data.description ||
  `Master ${tool} with our comprehensive guide. Learn essential techniques, best practices, and advanced tips.`;
const articleTags = article.data.tags || [tool, 'guide', 'tutorial'];
const publishedDate = article.data.publishedDate
  ? formatDate(article.data.publishedDate)
  : formatDate(new Date().toISOString());
const articleImage = article.data.featuredImage || article.data.image;
const hasImage = Boolean(articleImage?.trim());
---

<!-- ========== OPTIMIZED ARTICLE CARD MARKUP ========== -->
<article
  class='article-card-optimized glassmorphism glassmorphism-card'
  data-index={index}
  data-tool={tool}
>
  <a
    href={`/tools/${tool}/${articleSlug}`}
    class='card-link'
    aria-label={`Read article: ${articleTitle}`}
  >
    <!-- カードヘッダー -->
    <header class='card-header'>
      <time
        class='card-date'
        datetime={article.data.publishedDate || new Date().toISOString()}
      >
        {publishedDate}
      </time>

      <!-- アクションインジケーター -->
      <div class='card-action-indicator' aria-hidden='true'>
        <svg
          class='arrow-icon'
          fill='none'
          stroke='currentColor'
          viewBox='0 0 24 24'
        >
          <path
            stroke-linecap='round'
            stroke-linejoin='round'
            stroke-width='2'
            d='M17 8l4 4m0 0l-4 4m4-4H3'></path>
        </svg>
      </div>
    </header>

    <!-- メインコンテンツ -->
    <div class='card-content'>
      {
        hasImage && (
          <div class='card-image-section'>
            <img
              src={articleImage}
              alt={`${articleTitle} - ${formatToolName(tool)} guide`}
              class='card-image'
              loading='lazy'
              decoding='async'
              width='280'
              height='160'
            />
          </div>
        )
      }

      <div class='card-text-content'>
        <h3 class='card-title'>{articleTitle}</h3>
        <p class='card-description'>{articleDescription}</p>
      </div>
    </div>

    <!-- フッター -->
    <footer class='card-footer'>
      <div class='card-tags' role='list' aria-label='Article tags'>
        {
          articleTags.slice(0, 3).map((tag: string) => (
            <span class='card-tag' role='listitem'>
              #{tag}
            </span>
          ))
        }
      </div>
    </footer>
  </a>
</article>

<style>
  /* ========== OPTIMIZED ARTICLE CARD STYLES ========== */
  .article-card-optimized {
    position: relative;
    border-radius: var(--radius-xl);
    overflow: hidden;
    transition: all var(--transition-normal);
    will-change: transform, box-shadow;
    contain: layout style paint;
  }

  .article-card-optimized:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-md);
  }

  .card-link {
    display: block;
    text-decoration: none;
    color: inherit;
    height: 100%;
    position: relative;
    z-index: 1;
  }

  .card-link::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
  }

  /* ========== カードヘッダー ========== */
  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: clamp(var(--spacing-sm), 2vw, var(--spacing-md))
      clamp(var(--spacing-md), 4vw, var(--spacing-lg)) var(--spacing-sm);
    gap: var(--spacing-sm);
  }

  .card-date {
    font-size: var(--font-size-xs);
    color: var(--color-text-muted);
    font-weight: 500;
  }

  /* ========== メインコンテンツ ========== */
  .card-content {
    padding: var(--spacing-sm) clamp(var(--spacing-md), 4vw, var(--spacing-lg));
    flex: 1;
  }

  .card-image-section {
    margin-bottom: var(--spacing-md);
  }

  .card-image {
    width: 100%;
    height: 120px;
    object-fit: cover;
    border-radius: var(--radius-md);
    transition: transform var(--transition-normal);
    will-change: transform;
    image-rendering: -webkit-optimize-contrast;
    image-rendering: crisp-edges;
  }

  .article-card-optimized:hover .card-image {
    transform: scale(1.02);
  }

  /* ========== テキストコンテンツ ========== */
  .card-title {
    font-size: clamp(var(--font-size-md), 2vw, var(--font-size-2xl));
    font-weight: 600;
    color: var(--color-text-primary);
    line-height: 1.4;
    margin: 0 0 var(--spacing-sm) 0;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .card-description {
    font-size: clamp(var(--font-size-xs), 1.5vw, var(--font-size-sm));
    color: var(--color-text-secondary);
    line-height: 1.5;
    margin: 0;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* ========== カードフッター ========== */
  .card-footer {
    padding: var(--spacing-sm) clamp(var(--spacing-md), 4vw, var(--spacing-lg))
      var(--spacing-md);
  }

  .card-tags {
    display: flex;
    gap: var(--spacing-sm);
    flex-wrap: wrap;
  }

  .card-tag {
    background: var(--color-primary / 0.15);
    color: var(--color-primary);
    padding: var(--spacing-sm) var(--spacing-md);
    border-radius: var(--radius-md);
    font-size: var(--font-size-sm);
    font-weight: 600;
    border: 1px solid var(--color-primary / 0.2);
    transition: all var(--transition-fast);
    cursor: pointer;
    user-select: none;
  }

  .card-tag:hover {
    background: var(--color-primary / 0.2);
    border-color: var(--color-primary / 0.4);
    transform: translateY(-1px);
    box-shadow: 0 2px 8px var(--color-primary / 0.2);
  }

  /* ========== アクションインジケーター ========== */
  .card-action-indicator {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    background: var(--color-primary / 0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 1;
    transition: all var(--transition-normal);
    flex-shrink: 0;
  }

  .arrow-icon {
    width: 1rem;
    height: 1rem;
    color: var(--color-primary);
  }

  /* デスクトップ表示ではホバー時にのみ表示 */
  @media (min-width: 768px) {
    .card-action-indicator {
      opacity: 0;
    }

    .article-card-optimized:hover .card-action-indicator {
      opacity: 1;
    }
  }

  /* ========== レスポンシブデザイン ========== */
  /* モバイル (320px+) - デフォルト */
  .article-card-optimized {
    min-height: clamp(200px, 25vh, 240px);
    margin: 0 clamp(var(--spacing-xs), 2vw, var(--spacing-md));
  }

  /* デスクトップ表示ではコンテンツに合わせて高さを調整 */
  @media (min-width: 768px) {
    .article-card-optimized {
      min-height: auto;
      height: fit-content;
    }

    .card-footer {
      padding: var(--spacing-sm)
        clamp(var(--spacing-md), 4vw, var(--spacing-lg)) var(--spacing-md);
    }
  }

  .card-image {
    height: clamp(100px, 15vh, 160px);
    object-position: center;
  }

  .card-tag {
    font-size: clamp(var(--font-size-xs), 1vw, var(--font-size-sm));
    padding: clamp(var(--spacing-xs), 1vw, var(--spacing-sm))
      clamp(var(--spacing-sm), 2vw, var(--spacing-md));
  }

  /* ========== アクセシビリティ ========== */
  @media (prefers-contrast: high) {
    .card-title {
      color: var(--color-text-primary);
    }

    .card-description {
      color: var(--color-text-secondary);
    }

    .card-tag {
      border-width: 2px;
      background: var(--color-primary / 0.3);
      color: var(--color-text-primary);
      font-weight: 700;
    }
  }

  @media (hover: none) and (pointer: coarse) {
    .card-action-indicator {
      opacity: 1;
    }
  }

  .article-card-optimized:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  /* キーボードナビゲーション対応 */
  .card-link:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  /* スクリーンリーダー対応 */
  .card-link[aria-label] {
    position: relative;
  }

  /* アニメーション軽減対応 */
  @media (prefers-reduced-motion: reduce) {
    .article-card-optimized,
    .card-image,
    .card-action-indicator {
      transition: none;
    }

    .article-card-optimized:hover {
      transform: none;
    }
  }
</style>
