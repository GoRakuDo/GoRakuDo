---
export interface Props {
  initialTag?: string;
  initialQuery?: string;
}

const { initialTag = '', initialQuery = '' } = Astro.props;
---

<section class='tag-section'>
  <header class='section-header'>
    <h2 class='section-title'>Jelajahi berdasarkan Tag</h2>
    <p class='section-description'>Klik pada tag untuk memfilter konten</p>
  </header>

  <div class='tag-cloud' id='tag-cloud'>
    <div class='loading-indicator'>Memuat tag...</div>
  </div>
</section>

<script is:inline define:vars={{ initialTag, initialQuery }}>
  async function loadTags() {
    try {
      const response = await fetch('/search/Search.json');
      const data = await response.json();
      const tagCloud = document.getElementById('tag-cloud');
      if (!tagCloud) return;
      const tags = data.metadata?.availableTags || [];
      tagCloud.innerHTML = tags
        .map(
          tag => `
        <a href="/search?tag=${encodeURIComponent(tag)}${initialQuery ? `&q=${encodeURIComponent(initialQuery)}` : ''}"
           class="tag-item${tag === initialTag ? ' active' : ''}" data-tag="${tag}" ${tag === initialTag ? 'aria-current="page"' : ''}>#${tag}</a>
       `
        )
        .join('');

      const links = tagCloud.querySelectorAll('.tag-item');
      links.forEach(link => {
        link.addEventListener('click', e => {
          e.preventDefault();
          const target = e.currentTarget;
          if (!(target instanceof HTMLAnchorElement)) return;

          // active更新
          links.forEach(l => l.classList.remove('active'));
          target.classList.add('active');
          target.setAttribute('aria-current', 'page');

          // URL更新
          const url = new URL(window.location.href);
          const tag = target.getAttribute('data-tag') || '';
          if (tag) url.searchParams.set('tag', tag);
          else url.searchParams.delete('tag');
          if (initialQuery) url.searchParams.set('q', initialQuery);
          window.history.pushState({}, '', url);

          // 検索セクションへイベント通知
          document.dispatchEvent(
            new CustomEvent('search:tag-selected', {
              detail: { tag },
            })
          );
        });
      });
    } catch (error) {
      console.error('Failed to load tags:', error);
      const el = document.getElementById('tag-cloud');
      if (el)
        el.innerHTML = '<div class="loading-indicator">Gagal memuat tag</div>';
    }
  }
  document.addEventListener('DOMContentLoaded', loadTags);
</script>
